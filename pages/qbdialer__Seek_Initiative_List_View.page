<apex:page standardController="qbdialer__SeekInitiative__c"
    id="SeekInitiative"
    recordSetVar="rsSeekInitiatives"
    tabStyle="is_links__tab"
    extensions="qbdialer.SeekInitiativeListView">
<script type="text/javascript"> __jQuery = null;if(typeof(jQuery) != "undefined") __jQuery = jQuery; jQuery = null; </script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery-migrate.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery-ui.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/profile_perms.js')}"></script>
<div class="lightning_css"> 
<apex:variable var="uiTheme" value="lightningDesktop" rendered="{!$User.UIThemeDisplayed == 'Theme4d'}">
    <style> 
        .lightning_css {
            padding-left:5px;
        }
    </style>
</apex:variable> 
<style type="text/css">
    @import url('/resource/qbdialer__c2c_resources/20170424025435/style/themes/smoothness/jquery-ui.min.css');

    #new_list_btn{
        margin-bottom: 8px;
    }

    .bottomNav{
        margin-top: 3px;
    }

     .sortHeader{
        display: block;
    }

    .sortArrow{
        width: 10px;
        height: 9px;
    }

    .ASC{
        background: transparent url(/img/alohaSkin/sortArrows_sprite.png) no-repeat 0 -16px;
    }

    .DESC{
        background: transparent url(/img/alohaSkin/sortArrows_sprite.png) no-repeat 0 top;
    }

</style>

<apex:outputPanel style="display:none">
    cloned_id: <apex:outputText id="cloned_id" value="{!cloned_id}"/>
    cloned_from: <apex:outputText id="cloned_from" value="{!cloned_from}"/>
</apex:outputPanel>
<div id="clone_dialog" style="display: none">
    <apex:form >
        <apex:pageBlock >
            <apex:pageBlockSection columns="1">
                <div id="clone_form">
                    <table><tbody>
                        <tr>
                            <td class="labelCol requiredInput"><label>Name:</label></td>
                            <td class="dataCol" noWrap="true">
                                <div class="requiredInput">
                                    <div class="requiredBlock"></div><input type="text" name="new_name" id="new_name" />
                                    <div id="clone_name_error" style="display:none" class="errorMsg"><strong>Error:</strong> You must enter a value</div>
                                </div>
                            </td>
                        </tr>
                    </tbody></table>
                </div>
                <div id="clone_in_progress" style="display:none;font-weight: bold;text-align:center;width:100%">
                    <img src="https://qbdialer.na6.visual.force.com/img/loading.gif"/> Cloning . . .
                </div>
                <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                    <br />
                    <div style="color:blue; font-style: italic;">NOTE: "Default Communications Templates" settings are <b>NOT</b> cloned!</div>
                </apex:outputPanel>
        </apex:pageBlockSection>
    </apex:pageBlock>
    <div style="text-align: right;" ></div>
  </apex:form>
</div>
    <script src="/soap/ajax/34.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/34.0/apex.js" type="text/javascript"></script>
    <script type="text/javascript">
        qbjq = jQuery.noConflict();//store internal copy so it won't get overwritten elsewhere
        jQuery = __jQuery;
        //TODO -- namespace pd (ie qbdialer__pd)

        qbjq(document).ready(function() {
            checkProfPerms();
        });
        var user_oauth_token = '{!JSENCODE($User.is_token__c)}';
        if (!user_oauth_token) {
            window.location.href="/apex/qbdialer__InsideSales_OAuth_Setup";
        }

        function goToPageKeyDown (e, elem) {
            if (e.keyCode === 13 || e.which === 13) {
                qbjq(elem).trigger("blur");
            }
        }

        function fewerRecords(){
            var num = document.getElementById('{!$Component.SeekInitiative.listPage.pagesize}').value;
            num = num.replace(/[^0-9]/g, '');
            if(num == '') num = 0;
            num = parseInt(num);
            if(num > 10) num -= 10;
            document.getElementById('{!$Component.SeekInitiative.listPage.pagesize}').value = num;
            document.getElementById('{!$Component.SeekInitiative.listPage.pagesize}').form.submit();
        }

        function moreRecords(){
            var num = document.getElementById('{!$Component.SeekInitiative.listPage.pagesize}').value;
            num = num.replace(/[^0-9]/g, '');
            if(num == '') num = 0;
            num = parseInt(num);
            num += 10;
            document.getElementById('{!$Component.SeekInitiative.listPage.pagesize}').value = num;
            document.getElementById('{!$Component.SeekInitiative.listPage.pagesize}').form.submit();
        }

        sforce.connection.sessionId="{!$Api.Session_ID}";
        var user  = null;
        var theme = null;
        function getTabClass() {
            try {
                if(theme == null){
                    user  = sforce.connection.getUserInfo();
                    theme = user.userUiSkin;
                }

                var bodytags = document.getElementsByTagName("body");
                var classes  = bodytags[0].className.split(' ');
                var hostname = window.location.hostname;
                return {
                    "css_base"  : "https://"+window.location.hostname,
                    "css_theme" : theme,
                    "css_class" : classes[0]};
            } catch (e) {
                return false;
            }
        }
        
        function launchTheList() {
            var can_launch = document.getElementById('{!$Component.SeekInitiative.listPage.can_launch}').innerHTML;
            if(can_launch != 'YES'){
                alert('You do not have permission to launch this list!');
                return;
            }

            var use_jwt              = document.getElementById('SeekInitiative:listPage:auth_mode_jwt').innerHTML;
            var query_id             = document.getElementById('SeekInitiative:listPage:seek_initiative_id').innerHTML;
            var name                 = document.getElementById('SeekInitiative:listPage:sf_query_name').innerHTML;
            var limit_calls_to       = document.getElementById('SeekInitiative:listPage:sf_query_limit_calls_to').innerHTML;
            var caller_id            = document.getElementById('SeekInitiative:listPage:sf_query_caller_id').innerHTML;
            var time_between_calls   = document.getElementById('SeekInitiative:listPage:sf_query_time_between_calls').innerHTML;
            var callback_permission  = document.getElementById('SeekInitiative:listPage:sf_query_callback_permission').innerHTML;

            var html = '<'+'form name="createList" method="post" action="{!JSENCODE(InsideSalesHostSmart)}/noauth/launch_sf_list'+'?';
            html    += 'salesforce_package_version=6.36.21';
            if (!use_jwt) {
                html    += '&organization_id={!$Organization.Id}';
                html    += '&token={!$User.is_token__c}';
            }
            html    += '&salesforce_seek_initiative_id='+encodeURIComponent(query_id);
            html    += '&salesforce_dialer_query_name='+encodeURIComponent(name);
            html    += '&limit_calls_to='+encodeURIComponent(limit_calls_to);
            html    += '&agent_phone={!$User.Phone}';
            html    += '&caller_id='+encodeURIComponent(caller_id);
            html    += '&time_between_calls='+encodeURIComponent(time_between_calls);
            html    += '&callbacks_go_to='+encodeURIComponent(callback_permission);

            var css_info             = getTabClass();

            if (css_info) {
                html    += '&css_base='+encodeURIComponent(css_info.css_base);
                html    += '&css_theme='+encodeURIComponent(css_info.css_theme);
                html    += '&css_class='+encodeURIComponent(css_info.css_class);
            } else {
                var bodytags = document.getElementsByTagName("body");
                var classes  = bodytags[0].className.split(' ');
                html += '&css_base='+encodeURIComponent("https://"+window.location.hostname);
                html += "&css_class="+encodeURIComponent(classes[0]);
            }

            html    += '"><input type="submit" style="visibility:hidden">';
            var finishCreatingList = function (html) {
                html    += '<'+'/form>';
                html    += '<'+'script>document.createList.submit();<'+'/script>';

                var host = document.location.protocol+'//'+ document.location.hostname;
                var w = window.open(host, '', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=1215,height=800');
                w.document.write(html);
            }
            if (use_jwt) {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.SeekInitiativeListView.getAuthToken}',
                    function(result, event) {
                        if (event.status) {
                            var jwt = result;
                            html += '<' + 'input type="hidden" name="Authorization" value="'+jwt+'">';
                            finishCreatingList(html);
                        } else if (event.type === 'exception') {
                            if (typeof console == 'object') {
                                console.log(event.message);
                            }
                        }
                    }
                );
            } else {
                finishCreatingList(html);
            }
        }

        function hidePermStatus(){
            document.getElementById('checkPermStatus.stop').style.display = 'none';
        }
        var seek_id_to_clone = '';
        function cloneList(seek_id) {
            seek_id_to_clone = seek_id;
            qbjq('#clone_dialog').dialog({
                modal: true,
                resizable: false,
                draggable: false,
                title: "Enter a name for the new list",
                buttons: {
                    "Save & Edit New List": function() {
                         doClone();
                    },
                    "Cancel": function() {
                        qbjq('#clone_name_error').hide();
                        qbjq(this).dialog("close");
                    }
                }
            });
        }
        function doClone() {
            var n = qbjq('#new_name').val().trim();
            if(n == '') {
                qbjq('#clone_name_error').show();
            } else {
                qbjq("#clone_in_progress").show();
                qbjq("#clone_form").hide();
                qbjq('#clone_name_error').hide();
                qbjq('.ui-dialog-buttonpane').hide();
                qbjq('.ui-dialog-titlebar').hide();
                cloneSeekList(seek_id_to_clone, n);
            }
        }
        function cloneComplete() {
            var new_id = qbjq("#SeekInitiative\\:cloned_id").html();
            var old_id = qbjq("#SeekInitiative\\:cloned_from").html();
            top.window.location = "/"+new_id+"/e?old=" +old_id;

        }
        
        function createNewList()
        {
            var has_max = qbjq('#SeekInitiative\\:listPage\\:main_page_block\\:has_max').val() == 'true';
            if (has_max) {
                alert('You have reached the maximum number of Seek lists. Please delete an existing Seek list before creating a new list.');
                return false;
            } else {
                qbjq('#SeekInitiative\\:listPage\\:main_page_block\\:new_list_button').click();
                return true;
            }
        }

        qbjq("#paginator_rpp .opt").live("mousedown", function () {
            var rpp = qbjq(".rppOpt", this).text();
            ListPaginator.hideSelector(_rpp_selector_id_str_);
            qbjq(_rpp_real_selector_).val(rpp).trigger("change");
        });

        qbjq('[id$=pagelinks_of]').live("click", function () {
            qbjq('[id$=paginator_rpp]').toggle();
        });

        qbjq(document.body).click(function(event) {
            if (!qbjq(event.target).closest('[id$=pagelinks_of]').length) {
                qbjq('[id$=paginator_rpp]').hide();
            };
        });

    </script>
    <div class="bPageTitle">
        <div class="ptBody secondaryPalette">
            <div class="content">
                <img class="pageTitleIcon" title="Seek Lists" alt="Seek Lists" src="/s.gif" />
                <h1 class="pageType">Seek Lists<span class="titleSeparatingColon">:</span></h1>
                <h2 class="pageDescription">Home</h2>
                <div class="blank">&nbsp;</div>
            </div>
            <!--
                <div class=links>
                    <a class="configLinks" title="Tell me more! (New Window)" href="javascript:openPopupFocusEscapePounds(%27/help/doc/user_ed.jsp?loc=help&target=account_def.htm&section=Accounts%27, %27Help%27, 700, 600, %27width=700,height=600,resizable=yes,toolbar=yes,status=no,scrollbars=yes,menubar=yes,directories=no,location=no,dependant=no%27, false, false);">Tell me more!</A> | <A title="Help for this Page (New Window)" href="javascript:openPopupFocusEscapePounds(%27/help/doc/user_ed.jsp?loc=help&amp;target=account_overview.htm&amp;section=Accounts%27, %27Help%27, 700, 600, %27width=700,height=600,resizable=yes,toolbar=yes,status=no,scrollbars=yes,menubar=yes,directories=no,location=no,dependant=no%27, false, false);">
                        <span class="helpLink">Help for this Page</span>
                        <img class="helpIcon" title="Help" alt="Help" src="/s.gif"/>
                    </a>
                </div>
            -->
        </div>
    </div>
    <apex:form id="listPage">
        <apex:actionFunction name="checkProfPerms" action="{!CheckProfPerms}" timeout="10000" rerender="dialer_queries_list" oncomplete="profPermComplete()">
            <apex:param name="type" assignTo="{!profPermRequestType}" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="checkPerms" action="{!CheckPerms}" status="checkPermStatus" rerender="si_data" oncomplete="launchTheList()">
            <apex:param name="seek_initiative_id" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="cloneSeekList" action="{!cloneSeekList}" oncomplete="cloneComplete()" rerender="cloned_id, cloned_from">
            <apex:param name="seek_id" value=""/>
            <apex:param name="new_name" value=""/>
        </apex:actionFunction>
        <apex:outputPanel id="si_data" style="display:none">
            <apex:outputText id="can_launch"                   value="{!CanLaunch}"/>
            <apex:outputText id="seek_initiative_id"           value="{!SeekInitiativeId}"/>
            <apex:outputText id="sf_query_name"                value="{!SeekInitiativeName}"/>
            <apex:outputText id="sf_query_limit_calls_to"      value="{!LimitCallsTo}"/>
            <apex:outputText id="sf_query_caller_id"           value="{!CallerId}"/>
            <apex:outputText id="sf_query_time_between_calls"  value="{!TimeBetweenCalls}"/>
            <apex:outputText id="sf_query_callback_permission" value="{!CallbackPermission}"/>
            <apex:outputText id="auth_mode_jwt"                value="{!auth_mode_jwt}" />
        </apex:outputPanel>
        <div style="margin-bottom: 5px">
            <a href="/apex/qbdialer__is_links">InsideSales</a>
            <strong>&gt;</strong>
            Seek Lists
        </div>
        <apex:pageBlock id="main_page_block">
            <div id="new_list_btn" style="width:100%; text-align:center">
                <apex:commandButton id="new_list_button" value=" New Seek List " style="display:none" action="{!create}" >
                <input type="button" onclick="createNewList()" value=" New Seek List " class="btn"/>
                </apex:commandButton>
                <apex:inputHidden value="{!HasMaxInitiative}" id="has_max" />
            </div>
            <apex:actionStatus id="checkPermStatus" stopStyle="display:none" onstart="this.style.display=''" onstop="setTimeout('hidePermStatus()', 3000)" startText="...validating launch permissions..." stopText="...validation complete" />
            <apex:outputPanel id="dialer_queries_list">
                <apex:pageBlockTable value="{!SeekInitiatives}" var="si">
                    <apex:column headerValue="Action">
                        <apex:outputLink rendered="{!si.p_edit}" value="/{!si.id}/e">Edit</apex:outputLink>
                        <apex:outputText rendered="{!si.p_edit}">&nbsp;|&nbsp;</apex:outputText>
                        <apex:outputLink rendered="{!si.p_clone}" value="javascript:cloneList('{!si.id}')">Clone</apex:outputLink>
                        <apex:outputText rendered="{!si.p_clone}">&nbsp;|&nbsp;</apex:outputText>
                        <apex:outputLink value="javascript:checkPerms('{!si.id}')">Launch</apex:outputLink>
                        <apex:outputText rendered="{!si.p_delete}">&nbsp;|&nbsp;</apex:outputText>
                        <apex:commandLink rendered="{!si.p_delete}" action="{!deleteQB}" value="Del" onclick="return confirm('Are you sure?');">
                            <apex:param name="seek_initiative_id" value="{!si.id}" />
                        </apex:commandLink>
                    </apex:column>
                    <apex:column headerValue="Name">
                         <apex:facet name="header">
                            <apex:commandLink action="{!initSetCon}" value="Name" id="nameSort" styleClass="sortHeader" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                             <apex:param value="Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                             <apex:image url="/s.gif" title="sort" alt="sort" styleClass="sortArrow {!IF(sortExpression=='Name',IF(sortDirection='ASC','ASC','DESC'),'')}"/>
                           </apex:commandLink>
                        </apex:facet>
                        <apex:outputLink value="/{!si.id}">{!si.name}</apex:outputLink>
                    </apex:column>
                    <apex:column value="{!si.owner}" title="Owner" headerValue="Owner">
                        <apex:facet name="header">
                           <apex:commandLink action="{!initSetCon}" value="Owner" id="ownerSort" styleClass="sortHeader" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                             <apex:param value="Owner.Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                             <apex:image url="/s.gif" title="sort" alt="sort" styleClass="sortArrow {!IF(sortExpression=='Owner.Name',IF(sortDirection='ASC','ASC','DESC'),'')}"/>
                           </apex:commandLink>
                        </apex:facet>
                    </apex:column>
                </apex:pageBlockTable>
            </apex:outputPanel>
              <div class="bottomNav">
                    <div class="paginator">
                        <apex:outputPanel id="pagelinks_of" styleClass="left" onmousedown="IS_togglePager();" onmouseover="ListPaginator.hoverSelector(this)" onmouseout="ListPaginator.unhoverSelector(this)">
                            <span class="selectorTarget">
                                &nbsp;{!IF(PageNumber == 1, IF(TotalResults > 0, 1, 0), ((PageNumber -1) * PageSize)+1)} - {!IF(TotalResults <= PageNumber * PageSize, TotalResults, PageNumber * PageSize)} of {!TotalResults}
                                <img class="selectArrow" src="/s.gif" />
                            </span>
                            <apex:selectList value="{!PageSize}" size="1" onchange="javascript: skipToPageNone();" style="display: none;" id="rpp_real_selector">
                                <apex:selectOption itemLabel="Display 10 records per page" itemValue="10" />
                                <apex:selectOption itemLabel="Display 25 records per page" itemValue="25" />
                                <apex:selectOption itemLabel="Display 50 records per page" itemValue="50" />
                                <apex:selectOption itemLabel="Display 100 records per page" itemValue="100" />
                                <apex:selectOption itemLabel="Display 200 records per page" itemValue="200" />
                            </apex:selectList>
                            <script type="text/javascript">
                                var _rpp_real_selector_ = document.getElementById(qbjq('[id$=rpp_real_selector]').attr('id'));
                                var _rpp_selector_id_str_ = qbjq('[id$=pagelinks_of]').attr('id');
                            </script>
                            <table cellpadding="0" cellspacing="0" class="selector rpp" id="paginator_rpp">
                                <tbody>
                                    <tr class="opt {!IF(PageSize = 10, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">10</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 25, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">25</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 50, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">50</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 100, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">100</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 200, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">200</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                </tbody>
                            </table>
                            <apex:actionFunction name="skipToPageNone" action="{!skipToPage}" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count" />
                        </apex:outputPanel>
                        <apex:outputPanel id="pagelinks" styleClass="prevNextLinks">
                            <span class="prevNext">
                                <apex:commandLink rendered="{!HasPrevious}" action="{!skipToFirstPage}" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                                    <apex:image url="/s.gif" styleClass="first"/>
                                </apex:commandLink>
                                <apex:image url="/s.gif" styleClass="firstoff" rendered="{!NOT(HasPrevious)}"/>
                            </span>
                            <span class="prevNext">
                                <apex:commandLink title="Previous" rendered="{!HasPrevious}" action="{!Previous}" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                                    <apex:param name="pageNumber" value="{!pageNumber}" assignTo="{!pageNumber}" />
                                    <apex:param name="startNdx" value="{!get_startNdx}" />
                                    <apex:param name="page_size" value="{!get_page_size}" />
                                    <apex:image url="/s.gif" title="Previous" alt="Previous" styleClass="prev"/>
                                    Previous
                                </apex:commandLink>
                                <apex:image url="/s.gif" styleClass="prevoff" rendered="{!NOT(HasPrevious)}"/>
                                <apex:outputPanel styleClass="pShowLess noLink" style="color:grey" rendered="{!NOT(HasPrevious)}">Previous</apex:outputPanel>
                            </span>
                            <span class="prevNext">
                                <apex:commandLink title="Next Page" value="Next" rendered="{!HasNext}" action="{!Next}" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                                    &nbsp;
                                    <apex:image url="/s.gif" title="Next Page" alt="Next Page" styleClass="next"/>
                                    <apex:param name="pageNumber" value="{!pageNumber}" assignTo="{!pageNumber}" />
                                    <apex:param name="startNdx" value="{!get_startNdx}" />
                                    <apex:param name="page_size" value="{!get_page_size}" />
                                </apex:commandLink>
                                <apex:outputPanel styleClass="pShowLess noLink" style="color:grey" rendered="{!NOT(HasNext)}">Next</apex:outputPanel>
                                <apex:image url="/s.gif" styleClass="nextoff" rendered="{!NOT(HasNext)}"/>
                            </span>
                            <span class="prevNext">
                                <apex:commandLink title="Last Page" rendered="{!HasNext}" action="{!skipToLastPage}" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                                    <apex:image url="/s.gif" title="Last Page" alt="Last Page" styleClass="last"/>
                                </apex:commandLink>
                                <apex:image url="/s.gif" styleClass="lastoff" rendered="{!NOT(HasNext)}"/>
                            </span>
                        </apex:outputPanel>
                        <apex:actionFunction name="goToPage" action="{!goToPage}" rerender="dialer_queries_list, pagelinks, pagelinks_of, pagelinks_count">
                            <apex:param name="firstParam" assignTo="{!pageNumber}" value="" />
                        </apex:actionFunction>
                        <apex:outputPanel id="pagelinks_count" styleClass="right">
                            <span>Page </span>
                            <apex:inputText value="{!pageNumber}" onblur="goToPage(this.value)" id="page_selector" styleClass="pageInput" onkeydown="goToPageKeyDown(event, this)" />
                            <span> of {!IF(TotalResults < PageSize, 1, CEILING(TotalResults / PageSize))}</span>
                        </apex:outputPanel>
                    </div>
                    <div class="clearingBox"></div>
                </div>
        </apex:pageBlock>
    </apex:form>
    </div>
</apex:page>