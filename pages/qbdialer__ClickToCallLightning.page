<apex:page showHeader="false">
<script>
var c2ctimer = {
    starttime: new Date
}; 
</script>
    <apex:includeScript value="/support/api/38.0/lightning/opencti_min.js"/>
    <apex:includeScript value="/soap/ajax/38.0/connection.js"/>
    <script type="text/javascript">
        c2ctimer.loadedscripts = new Date;
        var using_open_cti = true;

        sforce.connection.sessionId="{!$Api.Session_ID}";
        sforce.opencti.enableClickToDial({callback: null});
        //sforce.opencti.setSoftphonePanelWidth({widthPX: 203, callback: null});
        sforce.opencti.setSoftphoneItemLabel({label: 'PowerDialer', callback: null});
        sforce.opencti.setSoftphonePanelLabel({label: 'PowerDialer', callback: null});

        // Callback for onClickToDial API method.
        var onClickToDialListener = function (response) {
            if (response) {
                // Get the id of the object that was clicked
                var number = response.number;
                var clicked_object_id = response.recordId;
                var clicked_object_type = response.objectType;

                // Get the id of the object on the page
                sforce.opencti.getAppViewInfo({callback:function(response) {
                    if (response.success) {
                        var page_object_id = response.returnValue.recordId;
                        var page_object_type = response.returnValue.objectType;
                    }

                    // Show the softphone, as it may currently be minimized
                    sforce.opencti.isSoftphonePanelVisible({callback: function(response) {
                            if (response.success && !response.returnValue.visible) {                        
                                sforce.opencti.setSoftphonePanelVisibility({visible:true});
                            }
                        }
					});
                    // If the clicked object is a Who, check the page object for
                    // a What. A What could be available in the scenario that a
                    // contact was dialed from an opportunity page. Vice versa
                    // for a when the clicked object is a What.
                    var who_id;
                    var what_id;
                    if (whoOrWhat(clicked_object_type) === 'who') {
                        who_id = clicked_object_id;
                        if (whoOrWhat(page_object_type) == 'what') {
                            what_id = page_object_id;
                        }
                    } else if (whoOrWhat(clicked_object_type) === 'what') {
                        what_id = clicked_object_id;
                        if (whoOrWhat(page_object_type) == 'who') {
                            who_id = page_object_id;
                        }
                    }

                    pd.dial(number, clicked_object_id, window, what_id, who_id);
                }
                });
            }
        };


        /**
        * Check if a Salesforce object type is a Who or a What
        *
        * @param id Any Salesforce ID
        */
        var whoOrWhat = function (object_type) {
            if (!object_type) {
                return false;
            }
            if (object_type == 'Lead' || object_type == 'Contact') {
                return 'who';
            } else {
                return 'what';
            }
        }

        // Registers a callback function that will execute when a user clicks on a phone link.
        sforce.opencti.onClickToDial({listener:onClickToDialListener});

        //LOADTIME - uncomment
        //setInterval(function () {c2cpage.logLoadingStats();}, 100);

        
    </script>
    <c:c2c_component />
    <!-- LOADTIME - uncomment
    <br />
    <button onclick="c2cpage.reset()" >Reset</button><br />
    <div id="timer_stats"></div>
    -->
</apex:page>