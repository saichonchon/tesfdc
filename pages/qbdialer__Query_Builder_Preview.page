<apex:page standardController="qbdialer__DialerQuery__c" sidebar="false" extensions="qbdialer.QueryPreview" tabStyle="is_links__tab">
    <style type="text/css">
    .paginator {
        padding-top: 4px;
        margin-right: 2px;
        margin-bottom: -2px;
    }

    .total_records {
        right: 33px;
        position: absolute;
    }

    .select_record_action {
        margin: -8px 0px;
    }

    .qfilter_popup {
        background-color: white;
        border: 1px solid #eeeeee;
        z-index: 9999;
        left: 50%;
        padding: 10px;
        position: fixed;
        width: 500px;
        margin-left: -250px;
        top: 150px;
        box-shadow: 1px 1px 11px #777;
        border-radius: 5px;
    }

    .qfilter_popup .data2Col {
        padding: 2px !important;
    }

    .qfilter_popup .qfilter_popup_message {
        padding: 2px 10px 10px 3px;
        cursor: default;
    }

    .qfilter_popup .qfilter_popup_header {
        cursor: default;
        padding: 8px 6px 8px 12px;
        background: url('/img/alohaSkin/overlayTopLft.png') left top no-repeat;
        margin: -10px -10px 10px -10px;
        border-top-right-radius: 5px;
        border-top-left-radius: 5px;
    }

    .qfilter_popup .qfilter_popup_header .qfilter_popup_text {
        color: black;
        font-size: 1.25em;
        font-weight: bold;
    }

    .qfilter_popup .qfilter_popup_header .qfilter_popup_closex {
        cursor: pointer;
        background: transparent url('/img/alohaSkin/closeX.png');
        width: 20px;
        height: 20px;
        float: right;
    }

    .qfilter_background {
        filter: alpha(opacity = 50);
        opacity: .5;
        background-color: black;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 9998;
    }

    .query_results .data2Col {
        padding: 0px !important;
    }

    label.search_label_field {
        font-weight: bold;
        padding-right: 6px;
    }

    .request_selector input {
        margin: -6px -3px -8px -5px;
    }
    </style>
    <script type="text/javascript">
        __jQuery = null;
        if (typeof(jQuery) != "undefined") {
            __jQuery = jQuery;
        }

        jQuery = null;
    </script>
    <script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery-migrate.min.js')}"></script>
    <script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/profile_perms.js')}"></script>
    <script src="/soap/ajax/11.1/connection.js" type="text/javascript"></script>
    <script type="text/javascript">
        qbjq = jQuery.noConflict();//store internal copy so it won't get overwritten elsewhere
        jQuery = __jQuery;
        
        qbjq(".qfilter_popup .qfilter_popup_closex").live("click", function () {
            qbjq(this).closest(".qfilter_popup").find(".qfilter_popup_closepopupbtn").trigger("click");
        });
        
        qbjq("#paginator_rpp .opt").live("mousedown", function () {
            var rpp = qbjq(".rppOpt", this).text();
            ListPaginator.hideSelector(_rpp_selector_id_str_);
            qbjq(_rpp_real_selector_).val(rpp).trigger("change");
        });

        qbjq(function () {
            qbjq(document.body).click(function (ev) {
                var is_pager_child = false;
                var target = ev.target;
                var max_iterations = 100; current_iteration = 0;

                do {
                    if (target.id === "paginator_rpp" || (target.className || "").match("selectorOpen")) {
                        is_pager_child = true;
                        break;
                    }
                    if (current_iteration++ >= max_iterations) {
                        break;
                    }
                    target = target.parentNode;
                } while (target);
                if (!is_pager_child) {
                    IS_togglePager(true);
                }
            });
        });
    </script>
    <div class="bPageTitle">
        <div class="ptBody secondaryPalette">
            <div class="content">
                <img class="pageTitleIcon" title="Domino Lists" alt="Domino Lists" src="/s.gif" />
                <h1 class="pageType">
                    <apex:outputPanel rendered="{!IsSeekQuery}">Seek List</apex:outputPanel>
                    <apex:outputPanel rendered="{!NOT(IsSeekQuery)}">Domino List</apex:outputPanel>
                </h1>
                <h2 class="pageDescription">Query Results</h2>
                <div class="blank">&nbsp;</div>
            </div>
            <div class="right">
                <h1 class="pageType total_records">Total Records in Query: <apex:outputText value="{!TotalResults}" title="{!filterSoql}"/></h1>
            </div>
        </div>
    </div>
    <!-- Display search results -->
    <apex:define name="body">
        <apex:form styleClass="query_results">
            <div style="margin-bottom: 5px">
                <a href="/apex/qbdialer__is_links">InsideSales</a>
                <strong>&gt;</strong>
                <apex:outputPanel rendered="{!IsSeekQuery}">
                    <a href="/apex/qbdialer__Seek_Initiative_List_View">Seek Lists</a>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!NOT(IsSeekQuery)}">
                    <a href="/apex/qbdialer__Query_Builder_List_View">Domino Lists</a>
                </apex:outputPanel>
                <strong>&gt;</strong>
                Query Preview
            </div>
            <apex:outputLabel for="simulated_time_field" value="Simulated Company Time:" styleClass="search_label_field" />
            <apex:selectList value="{!simulated_time}" size="1" id="simulated_time_field" onchange="javascript: updateSimulatedTime();">
                <apex:selectOptions value="{!simulated_times}" />
            </apex:selectList>
            <apex:actionFunction name="updateSimulatedTime" action="{!updateSimulatedTime}"/>
            <apex:pageBlock >
                <apex:outputPanel id="qualifying_filters_popup">
                    <apex:outputPanel layout="block" rendered="{!displayQualifyingFilters}" styleClass="qfilter_popup">
                        <div class="qfilter_popup_header">
                            <div class="qfilter_popup_closex"></div>
                            <span class="qfilter_popup_text">View Qualifying Filters</span>
                        </div>
                        <div class="qfilter_popup_message">This record qualified for this timeblock query based on the following filters:</div>
                        <apex:pageBlockSection columns="1">
                            <apex:pageBlockTable value="{!QualifyingFilters}" var="qf">
                                <apex:column headerValue="Filter Field" value="{!qf['field']}" />
                                <apex:column headerValue="Operator" value="{!qf['operator']}" />
                                <apex:column headerValue="Value" value="{!qf['value']}" />
                            </apex:pageBlockTable>
                        </apex:pageBlockSection>
                        <center>
                            <br />
                            <apex:commandButton value="Close" action="{!hideQualifyingFilters}" rerender="qualifying_filters_popup" styleClass="qfilter_popup_closepopupbtn" />
                        </center>
                    </apex:outputPanel>
                    <apex:outputPanel layout="block" rendered="{!displayQualifyingFilters}" styleClass="qfilter_background" />
                </apex:outputPanel>
                <apex:pageBlockSection title="Records in Dialer List" columns="1" collapsible="false">
                    <apex:outputPanel id="searchfields">
                        <apex:outputLabel for="namefield" value="Find Record:" styleClass="search_label_field" />
                        <apex:inputText id="namefield" value="{!search_name_text}" onkeydown="document.getElementById('{!$Component.idfield}').value = ''; if ((event.which || event.keyCode) === 13) normalizeForm();" />
                        <apex:inputHidden id="idfield" value="{!search_record_id}" />
                        <span>&nbsp;&nbsp;</span>

                        <apex:outputLabel for="ownertextfield" value="Owner:" styleClass="search_label_field" />
                        <apex:selectList value="{!search_owner_type}" size="1" id="ownertypefield" onchange="document.getElementById('{!$Component.idfield}').value = '';">
                            <apex:selectOption itemLabel="User" itemValue="user" />
                            <apex:selectOption itemLabel="List" itemValue="list" />
                        </apex:selectList>
                        <apex:inputText id="ownertextfield" value="{!search_owner_text}" styleClass="ownertextfield" onfocus="this.readOnly = true;" onclick="this.readOnly = true;" />
                        <apex:inputHidden id="ownertextfield_lkid" value="{!search_owner_id}" />
                        <apex:inputHidden id="ownertextfield_lkold" />

                        <a href="#" id="opp4_lkwgt" onclick="setLastMousePosition(event); customOwnerLookUp(); document.getElementById('{!$Component.idfield}').value = '';" title="Lookup (New Window)">
                            <img src="/s.gif" alt="Lookup (New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" /></a>
                        <script type="text/javascript">
                            var _owner_text_field_ = document.getElementById("{!$Component.ownertextfield}");
                            var _owner_type_field_ = document.getElementById("{!$Component.ownertypefield}");
                            var _record_id_field_ = document.getElementById("{!$Component.idfield}");

                            function customOwnerLookUp () {
                                var current;
                                if (_owner_type_field_ && _owner_type_field_.value === 'list') {
                                    current = 'lead_queue';
                                } else {
                                    current = '005';
                                }
                                openLookup('/_ui/common/data/LookupPage?lkfm=editPage&lknm={!$Component.ownertextfield}&lktp=' + current, 670, '1', '&lksrch=' + escapeUTF((_owner_text_field_ ? _owner_text_field_.value : '').substring(0, 80)))
                            }

                            function selectSingleRecord (id, qualifying, qualifying_flip) {
                                qbjq(".select_record_action input[type=radio]").attr("disabled", true);
                                _record_id_field_.value = id;
                                _viewing_disqualified_result_.value = qualifying_flip;
                                _viewing_standard_results_.value = qualifying;
                                _viewing_multiple_results_.value = 'false';
                                
                                runControllerSearch();
                            }

                            function goToPageKeyDown (e, elem) {
                                if (e.keyCode === 13 || e.which === 13) {
                                    qbjq(elem).trigger("blur");
                                }
                            }

                            function normalizeForm () {
                                _viewing_disqualified_result_.value = "";
                                _viewing_multiple_results_.value = "";
                                _viewing_standard_results_.value = "";
                                _viewing_disqualified_result_.parentNode.removeChild(_viewing_disqualified_result_);
                                _viewing_multiple_results_.parentNode.removeChild(_viewing_multiple_results_);
                                _viewing_standard_results_.parentNode.removeChild(_viewing_standard_results_);
                                runControllerSearch();
                            }

                            var IS_togglePager = (function () {
                                var showing = false;
                                return function (justhide) {
                                    if (justhide === true) {
                                        showing = false;
                                        ListPaginator.hideSelector('{!$Component.pagelinks_of}');
                                    } else if (showing = !showing) {
                                        ListPaginator.showSelector('{!$Component.pagelinks_of}')
                                    } else {
                                        ListPaginator.hideSelector('{!$Component.pagelinks_of}');
                                    }
                                };
                            })();
                        </script>
                        <span>&nbsp;&nbsp;&nbsp;</span>

                        <apex:commandButton rerender="searchfields" onclick="document.getElementById('{!$Component.idfield}').value = ''; normalizeForm();" action="{!runVoid}" value="Search" />
                        <span>&nbsp;</span>
                        <apex:commandButton rerender="searchfields, results_table, dq_result_msg, pagelinks, pagelinks_of, pagelinks_count" action="{!clearSearch}" value="Clear Search" />
                    </apex:outputPanel>

                    <apex:actionFunction name="runControllerSearch" action="{!runSearch}" oncomplete="rerunControllerSearch()" />
                    <apex:actionFunction name="rerunControllerSearch" action="{!runSearch}" rerender="searchfields, results_table, dq_result_msg, pagelinks, pagelinks_of, pagelinks_count" />
                    <apex:outputPanel id="dq_result_msg">
                        <apex:inputHidden value="{!viewing_standard_results}" id="viewing_standard_results" />
                        <apex:inputHidden value="{!viewing_multiple_results}" id="viewing_multiple_results" />
                        <apex:inputHidden value="{!viewing_disqualified_result}" id="viewing_disqualified_result" />
                        <script type="text/javascript">
                            var _viewing_disqualified_result_ = document.getElementById("{!$Component.viewing_disqualified_result}");
                            var _viewing_multiple_results_ = document.getElementById("{!$Component.viewing_multiple_results}");
                            var _viewing_standard_results_ = document.getElementById("{!$Component.viewing_standard_results}");
                        </script>

                        <apex:pageMessage strength="1" rendered="{!viewing_disqualified_result}" summary="{!disqualified_record_name} did not qualify for this timeblock query for the following reasons:" severity="warning" />
                        <apex:pageBlockTable value="{!disqualified_record_filters}" var="filter" rendered="{!viewing_disqualified_result}">
                            <apex:column headerValue="Object" value="{!filter['object']}" />
                            <apex:column headerValue="Field" value="{!filter['field']}" />
                            <apex:column headerValue="Operator" value="{!filter['operator']}" />
                            <apex:column headerValue="Filter Value" value="{!filter['value']}" />
                            <apex:column headerValue="Record Value" value="{!filter['record_value']}" />
                        </apex:pageBlockTable>
                    </apex:outputPanel>
                    <apex:outputPanel id="results_table">
                        <apex:pageMessage strength="1" rendered="{!AND(removing_related_object, viewing_standard_results, NOT(viewing_multiple_results))}" summary="Some records have qualified multiple times based on the query's criteria. The dial order only includes a single instance of a qualifying record; duplicate entries are discarded." severity="warning" />
                        <apex:pageBlockTable value="{!QueryResults}" var="result" rendered="{!OR(viewing_standard_results, viewing_multiple_results)}">
                            <!-- multiple search results select radio field -->
                            <apex:column headerValue="Selected" rendered="{!viewing_multiple_results}">
                                <center>
                                    <apex:selectRadio onclick="selectSingleRecord('{!result.recordId}', '{!result.qualifying}', '{!NOT(result.qualifying)}')" styleClass="select_record_action" />
                                </center>
                            </apex:column>

                            <!-- standard columns -->
                            <apex:repeat value="{!ResultColumns}" var="col">
                                <apex:column headerValue="{!col['label_str']}" value="{!result[col['value_key']]}" />
                            </apex:repeat>

                            <!-- view qualifying filters link -->
                            <apex:column headerValue="Qualifying Filters" rendered="{!viewing_standard_results}">
                                <center>
                                    <apex:commandLink value="View" action="{!showQualifyingFilters}" rerender="qualifying_filters_popup">
                                        <apex:param name="record_id" value="{!result.recordId}" assignTo="{!record_id}" />
                                    </apex:commandLink>
                                </center>
                            </apex:column>
                        </apex:pageBlockTable>
                    </apex:outputPanel>
                </apex:pageBlockSection>

                <div class="bottomNav">
                    <div class="paginator">
                        <apex:outputPanel id="pagelinks_of" styleClass="left" onmousedown="IS_togglePager();" onmouseover="ListPaginator.hoverSelector(this)" onmouseout="ListPaginator.unhoverSelector(this)">
                            <span class="selectorTarget">
                                &nbsp;{!IF(PageNumber == 1, IF(TotalResults > 0, 1, 0), ((PageNumber -1) * PageSize)+1)} - {!IF(TotalResults <= PageNumber * PageSize, TotalResults, PageNumber * PageSize)} of {!TotalResults}
                                <img class="selectArrow" src="/s.gif" />
                            </span>
                            <apex:selectList value="{!PageSize}" size="1" onchange="javascript: skipToPageNone();" style="display: none;" id="rpp_real_selector">
                                <apex:selectOption itemLabel="Display 10 records per page" itemValue="10" />
                                <apex:selectOption itemLabel="Display 25 records per page" itemValue="25" />
                                <apex:selectOption itemLabel="Display 50 records per page" itemValue="50" />
                                <apex:selectOption itemLabel="Display 100 records per page" itemValue="100" />
                                <apex:selectOption itemLabel="Display 200 records per page" itemValue="200" />
                            </apex:selectList>
                            <script type="text/javascript">
                                var _rpp_real_selector_ = document.getElementById("{!$Component.rpp_real_selector}");
                                var _rpp_selector_id_str_ = "{!$Component.pagelinks_of}";
                            </script>
                            <table cellpadding="0" cellspacing="0" class="selector rpp" id="paginator_rpp">
                                <tbody>
                                    <tr class="opt {!IF(PageSize = 10, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">10</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 25, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">25</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 50, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">50</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 100, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">100</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                    <tr class="opt {!IF(PageSize = 200, 'optSelected', 'optUnselected')}" onmouseover="if (this.className.indexOf('optHover') < 0) { this.className += ' optHover' }" onmouseout="this.className = this.className.replace('optHover', '')">
                                        <td class="optUnselected">Display</td>
                                        <td class="rppOpt">200</td>
                                        <td class="optUnselected">records per page</td>
                                    </tr>
                                </tbody>
                            </table>
                            <apex:actionFunction name="skipToPageNone" action="{!skipToPage}" rerender="results_table, pagelinks, pagelinks_of, pagelinks_count" />
                        </apex:outputPanel>
                        <apex:outputPanel id="pagelinks" styleClass="prevNextLinks">
                            <span class="prevNext">
                                <apex:commandLink rendered="{!HasPrevious}" action="{!skipToFirstPage}" rerender="results_table, pagelinks, pagelinks_of, pagelinks_count">
                                    <apex:image url="/s.gif" styleClass="first"/>
                                </apex:commandLink>
                                <apex:image url="/s.gif" styleClass="firstoff" rendered="{!NOT(HasPrevious)}"/>
                            </span>
                            <span class="prevNext">
                                <apex:commandLink title="Previous" rendered="{!HasPrevious}" action="{!Previous}" rerender="results_table, pagelinks, pagelinks_of, pagelinks_count">
                                    <apex:param name="pageNumber" value="{!pageNumber}" assignTo="{!pageNumber}" />
                                    <apex:param name="startNdx" value="{!get_startNdx}" />
                                    <apex:param name="page_size" value="{!get_page_size}" />
                                    <apex:image url="/s.gif" title="Previous" alt="Previous" styleClass="prev"/>
                                    Previous
                                </apex:commandLink>
                                <apex:image url="/s.gif" styleClass="prevoff" rendered="{!NOT(HasPrevious)}"/>
                                <apex:outputPanel styleClass="pShowLess noLink" style="color:grey" rendered="{!NOT(HasPrevious)}">Previous</apex:outputPanel>
                            </span>
                            <span class="prevNext">
                                <apex:commandLink title="Next Page" value="Next" rendered="{!HasNext}" action="{!Next}" rerender="results_table, pagelinks, pagelinks_of, pagelinks_count">
                                    &nbsp;
                                    <apex:image url="/s.gif" title="Next Page" alt="Next Page" styleClass="next"/>
                                    <apex:param name="pageNumber" value="{!pageNumber}" assignTo="{!pageNumber}" />
                                    <apex:param name="startNdx" value="{!get_startNdx}" />
                                    <apex:param name="page_size" value="{!get_page_size}" />
                                </apex:commandLink>
                                <apex:outputPanel styleClass="pShowLess noLink" style="color:grey" rendered="{!NOT(HasNext)}">Next</apex:outputPanel>
                                <apex:image url="/s.gif" styleClass="nextoff" rendered="{!NOT(HasNext)}"/>
                            </span>
                            <span class="prevNext">
                                <apex:commandLink title="Last Page" rendered="{!HasNext}" action="{!skipToLastPage}" rerender="results_table, pagelinks, pagelinks_of, pagelinks_count">
                                    <apex:image url="/s.gif" title="Last Page" alt="Last Page" styleClass="last"/>
                                </apex:commandLink>
                                <apex:image url="/s.gif" styleClass="lastoff" rendered="{!NOT(HasNext)}"/>
                            </span>
                        </apex:outputPanel>
                        <apex:actionFunction name="goToPage" action="{!goToPage}" rerender="results_table, pagelinks, pagelinks_of, pagelinks_count">
                            <apex:param name="firstParam" assignTo="{!pageNumber}" value="" />
                        </apex:actionFunction>
                        <apex:outputPanel id="pagelinks_count" styleClass="right">
                            <span>Page </span>
                            <apex:inputText value="{!pageNumber}" onblur="goToPage(this.value)" id="page_selector" styleClass="pageInput" onkeydown="goToPageKeyDown(event, this)" />
                            <span> of {!IF(TotalResults < PageSize, 1, CEILING(TotalResults / PageSize))}</span>
                        </apex:outputPanel>
                    </div>
                    <div class="clearingBox"></div>
                </div>
            </apex:pageBlock>
        </apex:form>
    </apex:define>
    <!-- End of search results -->
    {!IS_Log}
</apex:page>