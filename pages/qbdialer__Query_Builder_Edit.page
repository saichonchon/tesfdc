<apex:page standardController="qbdialer__DialerQuery__c"
    extensions="qbdialer.QueryBuilder,qbdialer.QueryBuilderReportAPIExtension,qbdialer.AjaxUserRoleSearch"
    docType="html-5.0"
    tabStyle="is_links__tab"
    title="Query Builder Edit: {!qbdialer__DialerQuery__c.Name}"
    action="{!checkQueryProfPerms}"
    id="QueryBuilder">
<script type="text/javascript"> __jQuery = null;if(typeof(jQuery) != "undefined") __jQuery = jQuery; jQuery = null; </script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery-migrate.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.QueryBuilder_resources, '/queryBuilderEditAjaxSearch.js')}"></script>
    <div class="lightning_css">
    <apex:outputPanel rendered="{!NOT(can_edit)}">
        <script type="text/javascript">
            window.location.href = '{!$Page.qbdialer__Query_Builder_List_View}';
        </script>
    </apex:outputPanel>
    <apex:outputText value="{!qbdialer__DialerQuery__c.qbdialer__OnlyDialOwn__c}" rendered="false" />
    <apex:outputText value="{!qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c}" rendered="false" />
    <div style="margin-bottom: 5px">
        <a href="/apex/qbdialer__is_links">InsideSales</a>
        <strong>&gt;</strong>
        <apex:outputPanel rendered="{!IsDominoQuery}">
        <a href="/apex/qbdialer__Query_Builder_List_View">Domino Lists</a>
        <strong>&gt;</strong>
        Domino List
        </apex:outputPanel>
        <apex:outputPanel rendered="{!IsSeekQuery}">
        <a href="/apex/qbdialer__Seek_Initiative_List_View">Seek Lists</a>
        <strong>&gt;</strong>
        Timeblock Query
        </apex:outputPanel>
    </div>
    <apex:dataList value="{!FieldTypes1}" var="ft" id="field_type_list1" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes2}" var="ft" id="field_type_list2" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes3}" var="ft" id="field_type_list3" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes4}" var="ft" id="field_type_list4" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes5}" var="ft" id="field_type_list5" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes6}" var="ft" id="field_type_list6" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes7}" var="ft" id="field_type_list7" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes8}" var="ft" id="field_type_list8" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes9}" var="ft" id="field_type_list9" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes10}" var="ft" id="field_type_list10" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes11}" var="ft" id="field_type_list11" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes12}" var="ft" id="field_type_list12" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
        <apex:outputPanel id="allow_multiple">{!ft.allow_multiple}</apex:outputPanel>
    </apex:dataList>
    <apex:outputPanel style="display:none" >
        <apex:outputText id="role_option_list" value="{!RoleOptions}"/>
    </apex:outputPanel>
    <apex:outputPanel style="display:none">
        Selected:  <apex:outputText id="selected_emails"  value="{!SelectedEmailFolderOptions}"/>
        Available: <apex:outputText id="available_emails" value="{!AvailableEmailFolderOptions}"/>
    </apex:outputPanel>
    <style type="text/css">
    #savestatus_mirror {
        font-weight: bold;
        font-style: italic;
        display: none;
    }
    .report_select {
        min-width: 285px;
    }
    </style>
    <apex:variable var="uiTheme" value="lightningDesktop" rendered="{!$User.UIThemeDisplayed == 'Theme4d'}">
        <style> 
            .lightning_css {
                padding-left:5px;
            }
        </style>
    </apex:variable>  
    <script type="text/javascript">
    qbjq = jQuery.noConflict();
    jQuery = __jQuery;
    var previousOnload = window.onload;
    //The function window['string'] returns the object of that name. {!Namespace} is the getNamespace function in the controller that returns your current namespace
    var nameSpaceObjectForAjax = window['{!Namespace}'];
    var blank_query_name = '- - - - - - - - - - - - - - - - - - - - - - - - - - -';
    window.onload = function() {
        if (previousOnload) {
            previousOnload();
            checkOnlyDialOwn();
        }
        onLoadCriteria();
        onLoadBooleanFilter();
        noPhoneNumberSetting ();
        if(document.getElementById("{!$Component.QueryBuilder.editPage.query_name}").value == ''){
            //if this is an add, set default values
            validateDialerQueryDefaults();
        }
        getLocalPresenceData();
        if(document.getElementById("{!$Component.QueryBuilder.editPage}:object_type").value == 'Opportunity'){
            qbjq('#opportunity_type_select').show();
        } else if(document.getElementById("{!$Component.QueryBuilder.editPage}:object_type").value == 'Case') {
            qbjq('#case_type_select').show();
        }
        removeOptionNoneIfAttendees();
        initReportToggle();
    }
    
    //For some reason --None-- appears as an option even with attendees when loading a saved list. 
    //This fuction checks to see if there is more than 1 option, and if so, checks if --None-- exists and removes it. 
    //This prevents the --None-- option from saving into the database as an attnedee. 
    function removeOptionNoneIfAttendees(){
        var length = qbjq("select[id$='duel_select_1']").children('option').length;
        if (length > 1) {
            if (qbjq('#QueryBuilder\\:editPage\\:duel_select_1 option:not([value])').length > 0) {
                qbjq('#QueryBuilder\\:editPage\\:duel_select_1 option:not([value])').remove();
            }
        }
    }

    function validateDialerQueryDefaults(){
        //Email Templates
        document.getElementById("{!$Component.QueryBuilder.editPage.use_salesforce_email_templates}").checked = false;
        toggleEmailFolders();

        //data source
        var data_source_element = document.getElementById("{!$Component.QueryBuilder.editPage.data_source}:0");
        if (data_source_element) {
            data_source_element.checked = true;
        }

        //Filter by owner

        if (document.getElementById("{!$Component.QueryBuilder.editPage.ownership_filter}:0")) {
            document.getElementById("{!$Component.QueryBuilder.editPage.ownership_filter}:0").checked = true;
        }

        //visibility
        var fshare_element = document.getElementById("{!$Component.QueryBuilder.editPage.fshare}");
        qbjq(fshare_element).find('option').each(function() {
            var $this = qbjq(this);
            if ($this.val() == 'fsharenone') {
                $this.prop('selected', true);
            } else {
                $this.prop('selected', false)
            }
        });

        //callbacks
        document.getElementById("{!$Component.QueryBuilder.editPage.call_backs}:0").checked = true;

        // Neural Sorting
        checkLicense('neur',
            function (data) {
                var smartSort = document.getElementById("QueryBuilder:editPage:neuralytics_sort");
                if (smartSort) {
                    smartSort.value = (data != null && data.message) ? "On" : "Off"
                }
            }
        );
    }

    function toggleCallingTimes(isChecked) {
        var start    = document.getElementById("{!$Component.QueryBuilder.editPage.call_start_time}");
        var end      = document.getElementById("{!$Component.QueryBuilder.editPage.call_end_time}");

        if (start && end) {
            start.disabled = ! isChecked;
            end.disabled   = ! isChecked;
        }
    }

    var type2ops = {};
    // At some point, 'QueryBuilder:field_type_listN' changed to use the DisplayType enum expression.
    type2ops['STRING']        = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['TEXTAREA']      = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['PHONE']         = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['EMAIL']         = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['URL']           = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['PICKLIST']      = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['REFERENCE']     = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['CURRENCY']      = ['e','n','l','g','m','h'];
    type2ops['INTEGER']       = ['e','n','l','g','m','h'];
    type2ops['DOUBLE']        = ['e','n','l','g','m','h'];
    type2ops['DATETIME']      = ['e','n','l','g','m','h'];
    type2ops['DATE']          = ['e','n','l','g','m','h'];
    type2ops['PERCENT']       = ['e','n','l','g','m','h'];
    type2ops['MULTIPICKLIST'] = ['e','n','u','x'];
    type2ops['BOOLEAN']       = ['e','n'];

    var field_meta = {};
    function buildFieldTypeMap(filter_index){
        var l = document.getElementById('QueryBuilder:field_type_list'+filter_index);
        var items = l.childNodes;
        for (var i = 0; i < items.length; i++) {
            if (items[i].tagName.toLowerCase() == 'li') {
                var id = items[i].id;
                if (id) {
                    var local_name = document.getElementById(id+":local_name").innerHTML;
                    var field_type = document.getElementById(id+":field_type").innerHTML;
                    var allow_multiple = document.getElementById(id+":allow_multiple").innerHTML == 'true';
                    field_meta[local_name] = {
                        field_type: field_type.split('Schema.DisplayType.')[1],
                        allow_multiple: allow_multiple
                    };
                }
            }
        }
    }

    function lp_blocks_response(response) {
        var selected_val = qbjq(".bucket_id").val();
        var first_item = false;
        if (response.lp_able) {
            qbjq('#local_presence_block_select').html('');
            for (var i=0; i < response.blocks.length; i++) {
                if (qbjq(".bucket_id").val() == response.blocks[i].id) {
                    selected_val = response.blocks[i].id;
                    qbjq('.bucket_id').val(selected_val);
                }
                if (first_item === false) {
                    first_item = response.blocks[i].id;
                }
                qbjq('#local_presence_block_select').append(qbjq('<option value="'+response.blocks[i].id+'">'+response.blocks[i].label+'</option>'));
            }

            if (first_item !== false && !qbjq('.bucket_id').val()) {
                qbjq('.bucket_id').val(first_item)
            }
            qbjq('#local_presence_block_select').val(qbjq('.bucket_id').val());
        } else {
            qbjq('#QueryBuilder\\:editPage\\:caller_id_type option[value="LocalPresence"]').remove();
        }
        updateCallerIdDisplay();
    }

    function updateCallerIdDisplay()
    {
        var caller_id_display = 'none';
        var local_presence_display = 'none';
        var use_local_presence = 'false';
        var caller_id_type_el = document.getElementById('{!$Component.QueryBuilder.editPage.caller_id_type}');
        var caller_id_el = document.getElementById('{!$Component.QueryBuilder.editPage.caller_id}');
        var use_local_presence_el = document.getElementById('{!$Component.QueryBuilder.editPage.use_local_presence}');
        var selected_val = qbjq(caller_id_type_el).val();
        var reset_caller_id = true;
        switch (selected_val) {
            case 'Custom Number':
                caller_id_display = 'inline';
                reset_caller_id = false;
                break;
            case 'LocalPresence':
                var lp_select = document.getElementById('local_presence_block_select');
                use_local_presence = 'true';
                local_presence_display = lp_select.options.length > 1 ? 'inline' : local_presence_display;
                var selected_bucket_idx = 0;
                var current_bucket_id = qbjq('.bucket_id').val();
                //if there's already a selected bucket, try to select it, otherwise, we'll just select the first one
                //in the list
                qbjq(lp_select.options).each(function (idx, ele) {
                    if (ele.value == current_bucket_id) {
                        selected_bucket_idx = idx;
                    }
                });
                lp_select.selectedIndex = selected_bucket_idx;
                qbjq('.bucket_id').val(lp_select.value);
                break;
        }

        qbjq('#caller_id_span').css('display', caller_id_display);
        qbjq('#local_presence_span').css('display', local_presence_display);
        if (reset_caller_id) {
            qbjq(caller_id_el).val('');
        }
        qbjq(use_local_presence_el).val(use_local_presence);
    }


    function getLocalPresenceData() {
        var script_element   = document.createElement('script');
        var user_oauth_token = '{!JSENCODE($User.is_token__c)}';
        var user_subdomain   = '{!JSENCODE($User.is_subdomain__c)}';
        script_element.type  = 'text/javascript';
        script_element.src   = 'https://'+user_subdomain+'.insidesales.com/admin/salesforce/local_presence_blocks?token='+user_oauth_token;
        document.body.appendChild(script_element);
    }

    function toggleCallingTimes(isChecked) {
        var start    = document.getElementById("{!$Component.QueryBuilder.editPage.call_start_time}");
        var end      = document.getElementById("{!$Component.QueryBuilder.editPage.call_end_time}");

        if (start && end) {
            start.disabled = ! isChecked;
            end.disabled   = ! isChecked;
        }
    }

    function buildRoleMap(){
        var list = document.getElementById('{!$Component.QueryBuilder.role_option_list}');
        var items = eval(list.innerHTML) || [];
        var options = [];
        var selected = [];
        for (var i = 0; i < items.length; i++) {
             var group_name = items[i].group_name;
             var label      = items[i].label;
             var role_id    = items[i].id;
             var sort_data  = items[i].sort_data;
             if (items[i].selected == '1') {
                 selected[selected.length] = role_id;
                 if (existingSelduel_select_1.options.length == 1 && existingSelduel_select_1.options[0].value == "") {
                     existingSelduel_select_1.options[0] = null;
                 }
                 existingSelduel_select_1.options[existingSelduel_select_1.options.length] = new Option(label, role_id);
             }
             //adds the array at the next location
             options[options.length] = [group_name, label, role_id, sort_data.toLowerCase(), existingSelduel_select_1];
        }

        duel_select_0Var.addOptions(false, options);
        existingSelduel_select_0.options[0] = new Option('--None--','');
        duel_select_0Var.filter();
    }

    var current_filter_number = 0;

    window.clearCampaign = function() {
        qbjq("#QueryBuilder\\:editPage\\:Campaign_lkid").val('');
        qbjq("#QueryBuilder\\:editPage\\:Campaign").val('');
        qbjq("#QueryBuilder\\:editPage\\:Campaign_lkold").val('');
        qbjq("#QueryBuilder\\:editPage\\:campaign_member_status option").each(function(item, ele) {
            if (item > 0) {
                qbjq(ele).remove();
            }
        });
    };

    function getSeparatorFromFieldType(type) {
        var separator = ';';
        if (type == 'Picklist' || type == 'RecordType') {
            separator = ',';
        }
        return separator;
    }

    function insertSelected() {
        var valName = '{!$Component.QueryBuilder.editPage}:fval' + current_filter_number;
        var colName = '{!$Component.QueryBuilder.editPage}:fcol' + current_filter_number;
        var dispName = '{!$Component.QueryBuilder.editPage}:fdisp' + current_filter_number;
        var sel     = document.getElementById(colName);
        var valSel  = document.getElementById(valName);
        var dispSel  = document.getElementById(dispName);
        var field_type = field_meta[splitFilterField(sel.value)].field_type;
        if (field_type == 'BOOLEAN') {
            if (document.getElementById('{!$Component.QueryBuilder.editPage}:chkbox0').checked) {
                valSel.value = 'True';
            } else if (document.getElementById('{!$Component.QueryBuilder.editPage}:chkbox1').checked) {
                valSel.value = 'False';
            }
            dispSel.value = valSel.value;
        } else if (qbjq.inArray(field_type, ['DATE', 'DATETIME']) > -1) {
            var filter_value = document.getElementById('{!$Component.QueryBuilder.editPage}:date_value').value;
            if (filter_value.indexOf(" n ") > -1) {
                var n = null;
                while (n == null || parseInt(n) != n) {
                    n = prompt("Please enter a value for 'n' (0-999):", 1);
                    if (n == null ) {
                        return;
                    } else if (n.length > 3 || parseInt(n) != n) {
                        alert('You must enter a number between 0 and 999!');
                        n = null;
                    }
                }
                filter_value = filter_value.replace(/ n /, ' ' + n + ' ');
            }
            dispSel.value = filter_value;
            valSel.value = filter_value;
        } else {
            var picklist_type = qbjq('#picklist_type').val();
            var cb;
            if (picklist_type == 'checkbox') {
                cb = document.getElementsByName('{!$Component.QueryBuilder.editPage.picklist_options_checkbox}');
            } else {
                cb = document.getElementsByName('{!$Component.QueryBuilder.editPage.picklist_options_radio}');
            }
            var id_list = '', disp_list = '';
            var separator = getSeparatorFromFieldType(field_type);
            var cb_id, cb_label;
            var val_display = '';
            for (var i = 0; i < cb.length; i++) {
                if (cb[i].type == picklist_type && cb[i].checked) {
                    cb_id = cb[i].id.replace(/\:/g, '\\:');
                    cb_label = qbjq('label[for="'+cb_id+'"]').text();

                    if (id_list != '') {
                        id_list += separator;
                        disp_list += separator;
                    }
                    var v = cb[i].value;
                    var quote = v.indexOf(separator) >= 0 || v.indexOf('"') >= 0;
                    v = v.replace(/"/g, '\\"');

                    if (quote) {
                        v = '"' + v + '"';
                    }
                    id_list += v;
                    disp_list += cb_label;
                    /*unset before post*/
                    cb[i].checked = false;
                }
            }
            valSel.value = id_list;
            dispSel.value = disp_list;
        }
        document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display = 'none';
    }

    function filterDataChanged(filter_number) {
        var val = document.getElementById('QueryBuilder:editPage:fval' + filter_number);
        var disp = document.getElementById('QueryBuilder:editPage:fdisp' + filter_number);
        var columnDropdown = document.getElementById('QueryBuilder:editPage:fcol' + filter_number);
        var selectedColumn = columnDropdown.options[columnDropdown.selectedIndex].text;
        // If the Campaign Name value changed, we need to grab the Campaign ID
        // from a special hidden field associated with the Campaign lookup popup
        if (selectedColumn === 'Campaign Name') {
            var campaignId = document.getElementById('QueryBuilder:editPage:fdisp' + filter_number + '_lkid').value;
            val.value = campaignId;
        } else {
            val.value = disp.value;
        }
    }

    function showFieldOptions(filter_number) {
        setTemporaryName();

        current_filter_number = filter_number;
        var colName = 'QueryBuilder:editPage:fcol' + current_filter_number;
        var sel = document.getElementById(colName);
        var field_type = field_meta[splitFilterField(sel.value)].field_type;

        document.getElementById('{!$Component.QueryBuilder.editPage}:picklist_values').style.display = 'none';
        document.getElementById('{!$Component.QueryBuilder.editPage}:date_values').style.display     = 'none';
        document.getElementById('{!$Component.QueryBuilder.editPage}:boolean_values').style.display  = 'none';
        if (field_type == 'BOOLEAN') {
            document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display   = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:boolean_values').style.display = '';
        } else if (qbjq.inArray(field_type, ['DATE', 'DATETIME']) > -1) {
            document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:date_values').style.display  = '';
        } else {
            // If we're creating a lookup for Campaign Member Status, pass in the selected Campaign Id
            var campaign_id;
            if (splitFilterField(sel.value) === 'CampaignMember.Status') {
                campaign_id = getTempCampaignIdFromFilterField();
            }

            document.getElementById('{!$Component.QueryBuilder.editPage}:loading').style.display = '';
            updatePicklistOptions(sel.value, campaign_id);
        }    
    }

    /**
     * Loop through the filters looking for a campaign id
     *
     * @return String campaign_id
     */
    function getTempCampaignIdFromFilterField() {
        var campaign_id;
        qbjq('.filterfield').each(function(idx, elem) {
            if (elem.value.indexOf('@') == -1) {
                return;
            }
            var field = elem.value.split('@')[1];
            if (field == 'CampaignId') {
                var tmp = elem.id.split('fcol');
                var filter_number = tmp[1];
                var hidden_campaign_field = document.getElementById('QueryBuilder:editPage:fval' + filter_number);
                if (hidden_campaign_field) {
                    campaign_id = hidden_campaign_field.value;
                }

                return false; // Break from the each loop
            }
        });

        return campaign_id;
    }                  

    function showPickListOptions(){
        unsetTemporaryName();
        document.getElementById('{!$Component.QueryBuilder.editPage}:loading').style.display         = 'none';
        document.getElementById('{!$Component.QueryBuilder.editPage}:picklist_values').style.display = '';
        document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display    = '';

        var colName = 'QueryBuilder:editPage:fcol' + current_filter_number;
        var sel = document.getElementById(colName);
        var allow_multiple = field_meta[splitFilterField(sel.value)].allow_multiple;

        if (allow_multiple) {
            qbjq('#picklist_radio').css('display', 'none');
            qbjq('#picklist_checkbox').css('display', 'block');
            qbjq('#picklist_type').val('checkbox');
        } else {
            qbjq('#picklist_radio').css('display', 'block');
            qbjq('#picklist_checkbox').css('display', 'none');
            qbjq('#picklist_type').val('radio');
        }
    }

    var oppLabels  = new Array();
    oppLabels['e'] = 'equals';
    oppLabels['n'] = 'not equal to';
    oppLabels['s'] = 'starts with';
    oppLabels['c'] = 'contains';
    oppLabels['k'] = 'does not contain';
    oppLabels['l'] = 'less than';
    oppLabels['g'] = 'greater than';
    oppLabels['m'] = 'less or equal';
    oppLabels['h'] = 'greater or equal';
    oppLabels['u'] = 'includes';
    oppLabels['x'] = 'excludes';

    var allOperators = ['e','n','s','c','k','l','g','m','h','u','x'];
    var noneLabel    = '--None--';

    function resetValue(filter_number){
        document.getElementById('{!$Component.QueryBuilder.editPage}:fval' + filter_number).value = '';
        document.getElementById('{!$Component.QueryBuilder.editPage}:fop'  + filter_number).value = '';
        document.getElementById('{!$Component.QueryBuilder.editPage}:fdisp'  + filter_number).value = '';
        // Hidden lookup id field is only on fields 1 through 5
        var hiddenLookupField = document.getElementById('{!$Component.QueryBuilder.editPage}:fdisp'  + filter_number + '_lkid')
        if (hiddenLookupField) {
            hiddenLookupField.value = '';
        }
    }

    function splitFilterField(value) {
        var split_val = value.split('@');
        if (split_val.length == 2) {
            return split_val[1];
        }
        return value;
    }

    function validateCallingHours() {
        var start    = document.getElementById("{!$Component.QueryBuilder.editPage.call_start_time}");
        var end      = document.getElementById("{!$Component.QueryBuilder.editPage.call_end_time}");
        var starttime = 0, endtime = 0;
        if (start) {
            starttime = start.value;
        }
        if (end) {
            endtime = end.value;
        }
        if (starttime >= endtime && starttime != '') {
            alert('For Calling Hours, the start time must be earlier than the end time');
            return false;
        }
        return true;
    }

    function validateFilters() {
        var validation_elements = qbjq('.validation_error');
        for (var i = 0; i < validation_elements.length; i++ ) {
            validation_elements[i].parentNode.removeChild(validation_elements[i]);
        }
        if (!validateCallingHours()) {
            return false;
        }

        var has_failed = false;
        var field_filters = [];
        var skipped = false;
        var adv_filter_skip = false;
        for (var i = 1; i <= 10; i++) {
            var colName    = document.getElementById('QueryBuilder:editPage:fcol' + i);
            var valueObject = document.getElementById('QueryBuilder:editPage:fval' + i);
            var value = valueObject.value;

            var field_id = colName.value;

            if (!field_id) {
                skipped = true;
                continue;
            }

            var type = field_meta[splitFilterField(field_id)].field_type;

            var valid = false;
            switch (type) {
                case 'DATE':
                case 'DATETIME':
                    valid = validateDate(value);
                    break;
                case 'INTEGER':
                    valid = validateInteger(value);
                    break;
                case 'CURRENCY':
                case 'DOUBLE':
                case 'NUMBER':
                case 'PERCENT':
                    valid = validateDouble(value);
                    break;
                case 'BOOLEAN':
                case 'CHECKBOX':
                    valid = validateCheckbox(value);
                    break;
                case 'AUTONUMBER':
                    valid = validateInteger(value);
                    break;
                case 'EMAIL':
                case 'PICKLIST':
                case 'RECORDTYPE':
                case 'REFERENCE': //valid = validateReference(value);
                case 'STRING':
                default:
                    valid = true;
                    break;
            }

            if (!valid) {
                has_failed = true;
                var tmp_error = document.createElement('span');
                tmp_error.style.color = '#D74C3B';
                tmp_error.setAttribute('class', 'validation_error');
                tmp_error['innerHTML'] = '<br />' + getValidationErrorForType(type);
                valueObject.parentNode.appendChild(tmp_error);
            }
            field_filters.push(i);
            adv_filter_skip = skipped ? true : false;
            
        }

        //Make sure there are no more than 2 different type of related objects
        var additional_row_buttons = document.getElementById('frowButtons'); //Non Simple Seek check
        var bool_filter_span = document.getElementById('bool_filter_span'); //Simple Seek check
        if ((additional_row_buttons && additional_row_buttons.style.display !== 'none')
            || (bool_filter_span && bool_filter_span.style.display !== 'none')
        ) {
            if (adv_filter_skip) {
                alert('You have blank fields in your filters. This will cause errors when using advanced filters. Please fill out those empty fields if you want to use the advanced filter.');
                return false;
            }
            var advanced_filter = document.getElementById('QueryBuilder:editPage:bool_filter');
            conditions_value = advanced_filter.value;
            conditions = conditions_value.replace(/\D/g,',');
            conditions = conditions.replace(/^[,\s]+|[,\s]+$/g, '').replace(/,[,\s]*,/g, ',');
            field_conditions = conditions.split(',');
            for (var x = 0; x < field_conditions.length; x++) {
                if (field_filters.indexOf(parseInt(field_conditions[x])) == -1) {
                    alert('You advanced filter is referencing a field that is empty. Please fix your advanced filter.');
                    return false;
                }
            }

        }
        var object_type = document.getElementById('QueryBuilder:editPage:object_type').value;
        var relatedObjectSet = {};
        var relatedObjectCount = 0;
        for (var i = 1; i <= 10; i++) {
            var colName    = document.getElementById('QueryBuilder:editPage:fcol' + i);
            var valueObject = document.getElementById('QueryBuilder:editPage:fobj' + i);
            var value = valueObject.value;
            var field_id = colName.value;

            if (value == object_type || !field_id) {
                continue;
            }
            if (!relatedObjectSet[value]) {
                relatedObjectSet[value] = 0;
                relatedObjectCount++;
            }
            relatedObjectSet[value]++;
            valid = (relatedObjectCount <= 2);

            if (!valid) {
                has_failed = true;
                var tmp_error = document.createElement('span');
                tmp_error.style.color = '#D74C3B';
                tmp_error.setAttribute('class', 'validation_error');
                tmp_error['innerHTML'] = '<br />' + 'Dialing lists do not support more than two related object types.'
                    +'<br />Change the object type to match an existing selection.';
                valueObject.parentNode.appendChild(tmp_error);
            }
        }
        //Fail if 'OR' are used and any related objects are used
        if (relatedObjectCount > 0) {
            var valueObject = document.getElementById('QueryBuilder:editPage:bool_filter');
            filterValue = valueObject.value;
            if (filterValue) {
                has_failed = true;
                var tmp_error = document.createElement('span');
                tmp_error.style.color = '#D74C3B';
                tmp_error.setAttribute('class', 'validation_error');
                tmp_error['innerHTML'] = 'Dialing lists with multiple object types cannot use advanced filters.<br />';
                var error_span = document.getElementById('QueryBuilder:editPage:bool_filter_error');
                valueObject.parentNode.insertBefore(tmp_error,error_span);
            }
        }

        if (has_failed) {
            document.getElementById('qb_filter_error').style.display = 'block';
        } else {
            document.getElementById('qb_filter_error').style.display = 'none';
        }
        return !has_failed;
    }

    function validateReport() {
        var r = document.getElementById('{!$Component.QueryBuilder.editPage.data_source}:1');
        var is_valid = true;
        if (r && r.checked) {
            var report_selected = qbjq('#QueryBuilder\\:editPage\\:reportid_src').val();
            var object_selected = qbjq('#QueryBuilder\\:editPage\\:reportidcolumn_src').val();
            if (report_selected == '' || object_selected == "" || object_selected == null) {
                is_valid = false;
            }
        }
        if (!is_valid) {
            document.getElementById('loaded_invalid_report_span').style.display = '';
        }
        return is_valid;
    }

    function getValidationErrorForType(type) {
        var msg = 'Error: Invalid value';
        switch (type) {
            case 'DATE':
            case 'DATETIME':
                msg = 'Error: Invalid date (Valid date format 1/19/2011 or 1/19/2011 2:53 PM)';
                break;
            case 'BOOLEAN':
            case 'CHECKBOX':
                msg = 'Error: Invalid Boolean';
                break;
        }
        return msg;
    }

    function validateDouble(double_string) {
        if (double_string.match(/[^\,\.\d]/)) {
            return false;
        }
        return true;
    }

    function validateInteger(integer_string) {
        if (integer_string.match(/[^\,\d]/)) {
            return false;
        }
        return true;
    }

    function validateReference(reference_id) {
        if (!(reference_id.length == 15 || reference_id.length == 18)) {
            return false;
        }
        if (reference_id.match(/(?:[a-zA-Z0-9]+)/) != reference_id) {
            return false;
        }
        return true;
    }

    function validateCheckbox(checkbox) {
        if (checkbox == 'True' || checkbox == 'False') {
            return true;
        }
        return false;
    }

    function validateMultiPicklist(multipicklist) {
        return true;
    }

    function validateDate(date_string) {
        var tmp_date = Date.parse(date_string);
        if (date_string == '') {
            return true;
        }

        if (!isNaN(tmp_date) ) {
            /*
                http://www.salesforce.com/us/developer/docs/api/Content/sforce_api_calls_soql_select_dateformats.htm
                Max/Min dates 1700-01-01T00:00:00Z GMT - 4000-12-31T00:00:00Z GMT
            */
            if (tmp_date < -8520310800000) {
                return false;
            }
            if (tmp_date > 64092150000000) {
                return false;
            }
            return true;
        }
        date_string = date_string.toUpperCase();
        var whitelist = {'YESTERDAY':'', 'TODAY':'', 'TOMORROW':''};
        if (whitelist.hasOwnProperty(date_string)) {
            return true;
        }

        if (!date_string.match(/^((LAST)|(NEXT)|(THIS)) ((\d+) )?(FISCAL )?((YEARS?)|(DAYS?)|(QUARTERS?)|(MONTHS?)|(WEEKS?))$/)) {
            return false;
        }
        return true;
    }

    function isSimpleSeek() {
        return qbjq("#simple_seek").val() == "true"; 
    }

    function updateOperator(filter_number) {
        var colName    = '{!$Component.QueryBuilder.editPage}:fcol' + filter_number;
        var opName     = '{!$Component.QueryBuilder.editPage}:fop'  + filter_number;
        var dispName   = '{!$Component.QueryBuilder.editPage}:fdisp' + filter_number;

        var selObj = document.getElementById(opName);
        var sel    = document.getElementById(colName);
        var disp   = document.getElementById(dispName);

        if (sel.selectedIndex == 0) {
            resetValue(filter_number);
            return;
        }

        var object_field = splitFilterField(sel.value);
        if (selObj.offsetWidth > 0) {
            selObj.style.width = selObj.offsetWidth + 'px';
        }

        var ops = null;
        if (isSimpleSeek()) {
            // Logic used to be for all filters but a long running bug allowed unsupported
            // operators to be selected.  Going forward, new queries with simple seek enabled
            // will be the only ones to use the type2ops map
            ops = type2ops[field_meta[object_field].field_type];
            var remove = ['u','x','c','k','s'];
            ops = qbjq.grep(ops == null ? allOperators : ops, function(op) {
                return qbjq.inArray(op, remove) < 0;
            });
        } else {
            ops = allOperators;
        }

        if (qbjq.inArray(object_field, ['CampaignId', 'CampaignMember.Status', 'OwnerId']) > -1) {
            ops = ['e'];
            if (object_field == 'CampaignMember.Status') {
                //make sure they are filtering on Campaign Name as well and that
                //Campaign Status is only selected once
                if (!hasFilter(sel.id, 'CampaignId')) {
                    alert('You cannot filter on Campaign Member Status without filtering on Campaign Name!');
                    clearCampaignMemberStatusFilters();
                    return false;
                } else if (hasFilter(sel.id, 'CampaignMember.Status')) {
                    alert('You can only have one Campaign Member Status filter!');
                    sel.selectedIndex = 0;
                    return false;
                }
            } else if (object_field == 'CampaignId') {
                //make sure that Campaign Name is only selected for one filter
                if (hasFilter(sel.id, 'CampaignId')) {
                    alert('You can only have one Campaign Name filter!');
                    sel.selectedIndex = 0;
                    return false;
                }
            }
        } else if (!hasFilter(sel.id, 'CampaignId') && hasFilter(sel.id, 'CampaignMember.Status')) {
            //if Campaign Name filter has been un-selected, we need to make sure
            //they're not filtering on Campaign Status
            clearCampaignMemberStatusFilters();
        }

        var currSelected = selObj.options[selObj.selectedIndex];
        selObj.length    = 0;
        var off          = 0;
        if (noneLabel != null) {
            off               = 1;
            selObj.options[0] = new Option (noneLabel, '');
            if (currSelected.value == '') {
                selObj.options[0].selected = true;
            }
        }

        for (var i = 0; i < ops.length; i++) {
            var label = oppLabels[ops[i]];
            if (label == null) {
                continue;
            }

            var option              = new Option (oppLabels[ops[i]], ops[i]);
            selObj.options[i + off] = option;
            if (currSelected != null && currSelected.value == option.value) {
                option.selected = true;
            }
        }

        showLookupForField(sel, true);
    }

    /**
     * show or hide the lookup field according to the field type
     * @param  select field
     * @return void
     */
    function showLookupForField(field, show) {
        var filter_number = field.id.split('fcol')[1];
        var lookupName = '{!$Component.QueryBuilder.editPage}:flkp' + filter_number;
        var dispName = '{!$Component.QueryBuilder.editPage}:fdisp' + filter_number;
        var colName    = '{!$Component.QueryBuilder.editPage}:fcol' + filter_number;
        var camName = '{!$Component.QueryBuilder.editPage}:flcam' + filter_number;
        var sel    = document.getElementById(colName);
        var field_type = field.value == '' ? '' : field_meta[splitFilterField(field.value)].field_type;

        if (show && qbjq.inArray(field_type, ['BOOLEAN','DATE','DATETIME','DIVISION','MULTIPICKLIST','PICKLIST','RECORDTYPE']) > -1) {
            var object_field = splitFilterField(sel.value);
            // If Campaign Name is selected, show a special look up element and
            // hide the standard one
            if (isSimpleSeek() && object_field == 'CampaignId') {
                document.getElementById(dispName).readOnly = true;
                document.getElementById(camName).style.display = '';
                document.getElementById(lookupName).style.display = 'none';
            } else {
                document.getElementById(lookupName).style.display = '';
                document.getElementById(camName).style.display = 'none';
                document.getElementById(dispName).readOnly = isSimpleSeek();
            }
        } else {
            document.getElementById(lookupName).style.display = 'none';
            document.getElementById(camName).style.display = 'none';
            document.getElementById(dispName).readOnly = false;
        }
    }

    /**
     * clear any filter for CampaignMember.Status
     * @return void
     */
    function clearCampaignMemberStatusFilters() {
        qbjq('.filterfield').each(function(idx, elem) {
            if (elem.value.indexOf('@') == -1) {
                return;
            }
            var f = elem.value.split('@')[1];
            if (f == 'CampaignMember.Status') {
                var tmp = elem.id.split('fcol');
                elem.selectedIndex = 0;
                resetValue(tmp[1]);
                showLookupForField(elem, false);
            }
        });
    }

    /**
     * Determine whether the given field has been selected for a filter
     * @param  string  id element id if field to exclude from search
     * @param  string  filter_field field for which we're checking for a filter
     * @return Boolean
     */
    function hasFilter(id, filter_field) {
        var has_filter = false;
        qbjq('.filterfield').each(function(idx, elem) {
            if (elem.id == id) {
                return;
            } else if (elem.value.indexOf('@') == -1) {
                return;
            }
            var f = elem.value.split('@')[1];
            if (f == filter_field) {
                has_filter = true;
            }
        });
        return has_filter;
     }

    function onLoadCriteria() {
        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            buildRoleMap();
        }

        for (var i = 1; i <= 12; i++) {
            buildFieldTypeMap(i);
            if (i <= 10) {
                updateOperator(i);
            }
        }

        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            var share_element = document.getElementById('{!$Component.QueryBuilder.editPage.fshare}');
            document.getElementById('duel').style.display = qbjq(share_element).val() == 'fsharegroups' ? 'block' : 'none';
        }

        showHideNeuralytics();
        qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').change(updateSorts);
    }

    function checkSaveStatus() {
        var textSpan  = document.getElementById('bool_filter_error_text');
        var pageMsgs  = document.getElementById('{!$Component.QueryBuilder.editPage.pageMsgsInner}');
        var errorSpan = document.getElementById('{!$Component.QueryBuilder.editPage.bool_filter_error}');
        if (pageMsgs) {
            if (pageMsgs.innerHTML == '') {
                getSelectedQBRoles();
            } else {
                window.scroll(0,0);
                toggleSaveBtns(false);
            }
        } else if (textSpan && textSpan.innerHTML != '' && errorSpan) {
            errorSpan.style.display = '';
        }
    }

    function getSelectedQBRoles() {
        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            if (!getDialerQueryId()) {
                document.getElementById("QueryBuilder:editPage:query_name_error").style.display = "";
                document.getElementById("{!$Component.QueryBuilder.editPage.query_name}").style.borderWidth   = "2px";
                document.getElementById("{!$Component.QueryBuilder.editPage.query_name}").style.borderColor   = "#cc0000";
                toggleSaveBtns(false);
                return;
            }

            if (existingSelduel_select_1.options.length > 0 && existingSelduel_select_1.options[0].value != "") {
                var options = "";
                for (var i = 0; i < existingSelduel_select_1.options.length; i++) {
                    if (options != "") {
                        options += ",";
                    }
                    existingSelduel_select_1.options[i].selected = false;
                    options += existingSelduel_select_1.options[i].value;
                }
                saveSelectedQBRoles(options);
            } else {
                emptyList();
            }
        } else {
            emptyList();
        }
    }

    var quick_save = true;
    var show_total = false;
    function hideStatuses() {
        document.getElementById('roleSaveStatus.stop').style.display            = 'none';
        document.getElementById('querySaveStatus.stop').style.display           = 'none';
        document.getElementById('addItemsStatus.stop').style.display            = 'none';
        document.getElementById('addItemsFromReportStatus.stop').style.display  = 'none';
        document.getElementById('savestatus_mirror').style.display  = 'none';
    }

    function redirectToView() {
        if (! document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            window.location.href="/apex/qbdialer__is_close";
        } else {
            var id = getDialerQueryId();
            if (id) {
                redirectToViewThemeBased('/apex/qbdialer__Query_Builder_List_View');//+id;
            }
        }
    }

    function redirectToViewThemeBased (redirect_url) {
        if ( "{! $User.UIThemeDisplayed }" == "Theme4d") {
            sforce.one.navigateToURL(redirect_url);
        }
        else {
            top.window.location.href = redirect_url;
        }
    }
    function getDialerQueryId() {
        var id = document.getElementById('{!$Component.QueryBuilder.editPage.sf_query_id}').innerHTML;
        if (id != "") {
            if (id.length == 18) {
                id = id.substr(0, 15);
            }
            return id;
        } else {
            return false;
        }
    }

    function unselectRoles() {
        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            var dd = document.getElementById('QueryBuilder:editPage:duel_select_0');
            var i;
            for (i = 0; i < dd.options.length; i++) {
                dd.options[i].selected = false;
            }

            dd = document.getElementById('QueryBuilder:editPage:duel_select_1');
            for (i = 0; i < dd.options.length; i++) {
                dd.options[i].selected = false;
            }
        }
    }

    function setObjectTypeFromReport() {
        var object_type = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value;
        var data_source_element = document.getElementById('{!$Component.QueryBuilder.editPage.data_source}:1');
        // If doing a list off of report, this will change the object type to the selected report object type.
        if (data_source_element && data_source_element.checked) {
            var sel = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn_src}')
            if (!sel.value) {
                return;
            } else {
                object_type = sel.options[sel.selectedIndex].text;
                document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value = object_type;
            }
        }
    }

    function preObjectTypeChange() {
        var object_type = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value;
        toggleSaveBtns(true);
        setObjectTypeFromReport();
        qbjq('#case_type_select').hide();
        qbjq('#opportunity_type_select').hide();
        if (object_type == 'Opportunity') {
            qbjq('#opportunity_type_select').show();
        } else if (object_type == 'Case') {
            qbjq('#case_type_select').show();
        }

        switch(object_type) {
            case 'Lead':
            case 'Contact':
                if (document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign_name')) {
                    document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign_name').style.display = '';
                }
                if (document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign_status')) {
                    document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign_status').style.display = '';
                }
                break;
            case 'Account':
            case 'Opportunity':
            case 'Case':
            case 'Task':
                if (document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign')) {
                    document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign').style.display = 'none';
                }
                if (document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign_status')) {
                    document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign_status').style.display = 'none';
                }
                break;
        }

        for (var x = 1; x <= 10; x++) {
            document.getElementById('{!$Component.QueryBuilder.editPage}:fcol'+x).value = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:fop'+x).value  = '';
            resetValue(x);
            updateOperator(x);
            if (x < 3) {
                document.getElementById('{!$Component.QueryBuilder.editPage}:scol'+x).value = '';
                document.getElementById('{!$Component.QueryBuilder.editPage}:sort'+x).value = 'ASC';
            }
        }
        prepDialMinMax(object_type);
    }

    function prepDialMinMax(object_type) {
        var dials_between_range = null;
        var dials_between_label = null;
        var dials_between_min = null;
        var dials_between_max = null;
        var minutes_between_calls = null;
        var minutes_between_calls_apex = null;

        if (undefined == object_type) {
            object_type = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value;
        }
        if (undefined == object_type) {
            throw('Object Type not found');
        }
        dials_between_range = document.getElementById('dials_between_range');
        dials_between_label = document.getElementById('dials_between_label');
        
        if (isSimpleSeek()) {
            dials_between_min = document.getElementById('{!$Component.QueryBuilder.editPage.dials_between_min_simple}');
            dials_between_max = document.getElementById('{!$Component.QueryBuilder.editPage.dials_between_max_simple}');
        } else {
            dials_between_min = document.getElementById('{!$Component.QueryBuilder.editPage.dials_between_min}');
            dials_between_max = document.getElementById('{!$Component.QueryBuilder.editPage.dials_between_max}');
        }
        if (document.getElementById('minutes_between_calls')) {
            minutes_between_calls      = document.getElementById('minutes_between_calls');
            minutes_between_calls_apex = document.getElementById('{!$Component.QueryBuilder.editPage.minutes_between_calls_apex}');
        }
        switch (object_type) {
            case 'Task':
            case 'Opportunity':
            case 'Case':
                dials_between_range.style.display = 'none';
                dials_between_label.style.display = 'none';
                dials_between_min.value = '';
                dials_between_max.value = '';
                if (minutes_between_calls != null) {
                    minutes_between_calls.style.display = 'none';
                    minutes_between_calls_apex.value = '';
                }
                break;
            default:
                dials_between_range.style.display = '';
                dials_between_label.style.display = '';
                if (minutes_between_calls != null) {
                    minutes_between_calls.style.display = '';
                }
        }
    }

    //This code is used for the Advanced Filter Options
    var lastRow = {!FilterCount};
    greyLink('fRemoveRowLink');
    unGreyLink('fAddRowLink');
    function onLoadBooleanFilter() {
        if (document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value && document.getElementById('bool_filter_span').style.display == 'none' ) {
            toggleBooleanFilter();
        }
    }

    function greyLink(linkId) {
        if (document.getElementById(linkId)) {
            document.getElementById(linkId).style.display            = 'none';
            document.getElementById(linkId + 'Greyed').style.display = '';
        }
    }

    function unGreyLink(linkId) {
        if (document.getElementById(linkId)) {
            document.getElementById(linkId).style.display = '';
            document.getElementById(linkId + 'Greyed').style.display = 'none';
        }
    }

    function addRow() {
        if (lastRow < 10) {
            toggleRow(lastRow+1, true);
            lastRow++;
            postRowProcess();
        }
        document.getElementById('fAddRowLink').blur();
    }

    function removeRow() {
        if (lastRow > 5) {
            toggleRow(lastRow, false);
            lastRow--;
            postRowProcess();
        }
        document.getElementById('fRemoveRowLink').blur();
    }

    function toggleRow(row, showing) {
        var displayRow                                    = showing ? '': 'none';
        var x          = row;
        document.getElementById('frow' + x).style.display = displayRow;
        var op         = document.getElementById('{!$Component.QueryBuilder.editPage}:fop' + x);
        op.style.width = document.getElementById('{!$Component.QueryBuilder.editPage}:fop' + 1).style.width;
        if (!showing) {
            document.getElementById('{!$Component.QueryBuilder.editPage}:fcol' + x).selectedIndex = 0;
            document.getElementById('{!$Component.QueryBuilder.editPage}:fop' + x).selectedIndex  = 0;
            document.getElementById('{!$Component.QueryBuilder.editPage}:fval' + x).value         = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:flkp' + x).style.display = 'none';
        }
        setTimeout(postRowProcess, 1000);
    }

    function postRowProcess() {
        if (lastRow > 5) {
            unGreyLink('fRemoveRowLink');
        } else {
            greyLink('fRemoveRowLink');
        }

        if (lastRow < 10) {
            unGreyLink('fAddRowLink');
        } else {
            greyLink('fAddRowLink');
        }
    }

    function toggleEmailFolders() {
        var use_salesforce_templates = document.getElementById("{!$Component.QueryBuilder.editPage.use_salesforce_email_templates}").checked;
        if (use_salesforce_templates) {
            qbjq('#email_folder_panel').show();
        } else {
            qbjq('#email_folder_panel').hide();
        }
    }

    function toggleLocalPresence(show) {
        var items = document.getElementsByClassName('local_presence_panel');
        if (show) {
            for (var i=0; i < items.length; i++) {
                items[i].style.display = "";
            }
        } else {
            for (var i=0; i < items.length; i++) {
                items[i].style.display = "none";
            }
        }
    }

    function toggleBooleanFilter() {
        if (document.getElementById('{!$Component.QueryBuilder.editPage}:fcol1').disabled) {
            return;
        }

        var bool_filter = document.getElementById('bool_filter_span');
        var showing     = (bool_filter.style.display == 'none');
        var display     = showing ? '' : 'none';
        var displayRow  = showing ? (isIE ? 'block' : 'table-row') : 'none';
        if (document.getElementById('frowButtons')) {
            document.getElementById('frowButtons').style.display = displayRow;
        }

        bool_filter.style.display                               = display;
        document.getElementById('bool_filter_toggle').innerHTML = showing ? 'Clear Advanced Options' : 'Advanced Options...';
        if (!showing) {
            document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value = '';
            lastRow = 5;
        } else if (!document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value || (document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value == '')) {
            var initialBoolFilter = '';
            for (var i = 0; i < 10; i++) {
                var x      = i + 1;
                var colEle = document.getElementById('{!$Component.QueryBuilder.editPage}:fcol' + x);
                if (typeof colEle.selectedIndex == 'number' ? colEle.selectedIndex != 0 : colEle.value.length > 0) {
                    if (initialBoolFilter.length > 0) {
                        initialBoolFilter += ' AND ';
                    }
                    initialBoolFilter += (i + 1);
                }
            }
            document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value = initialBoolFilter;
        }
        var andVisibility = showing ? 'hidden' : 'visible';
        for (var i = 0; i < 10; i++) {
            if (i > 5 && !showing) {
                toggleRow(i, showing);
            }
            var x = i + 1;
            document.getElementById('f' + x).style.display = display;
            if (i < 4) {
                document.getElementById('and' + x).style.visibility = andVisibility;
            }
        }
        postRowProcess();
    }

    function updateDataSourceDisplay(value, force_update_object_type){
        var report_panels = ['report_panel'];
        var query_panels  = [
            'object_type_panel',
            '{!$Component.QueryBuilder.editPage.filter_panel}',
            '{!$Component.QueryBuilder.editPage.sort_criteria_panel}'];
        for (var i = 0; i < query_panels.length; i++) {
            try {
                document.getElementById(query_panels[i]).style.display = (value != 'Report')?'':'none';
            } catch(e) {}
        }

        for (var i = 0; i < report_panels.length; i++) {
            try {
                document.getElementById(report_panels[i]).style.display = (value == 'Report')?'':'none';
            } catch(e) {}
        }

        if (value == 'Report') {
//            initFetchReports();
            var sel = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn_src}')
            if (!sel.value) {
                return;
            } else {
                object_type = sel.options[sel.selectedIndex].text;
                document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value = object_type;
            }
        } else if (force_update_object_type === true)  {
            preObjectTypeChange();
            setObjectType();
            objectLimitCallsToByAccount();
        }
    }

    function showHideNeuralytics() {
        var neuralytics_panel = document.getElementById('QueryBuilder:editPage:neuralytics_panel');
        if (neuralytics_panel) {
            checkLicense('neur',
                function (data) {
                    neuralytics_panel.style.display = data.message ? 'block' : 'none';
                    if (data.message) {
                        updateSorts();
                    }
                }
            );
        }
    }

    /**
     * Calls the check_license action.
     * @param string license The license key to check.
     * @param function callback The function to call on success.
     */
    function checkLicense(license, callback) {
        var user_subdomain = '{!JSENCODE($User.is_subdomain__c)}';
        qbjq.ajax({
            url: 'https://' + user_subdomain + '.insidesales.com/do=noauth/check_license?key=' + license,
            dataType: 'jsonp',
            success: callback,
            cache: true
        });
    }

    /**
     * Parse a URL to get the search parameters and return them as an object map.
     * @param string The URL to parse, if not provided defaults to location.search
     */
    function getSearchParameters(url) {
        if (!url) {
            url = location.search;
        }
        var parameters = url.substring(url.indexOf('?') + 1).split('&');
        var request = {};
        for (var i=parameters.length-1; i>=0; i--) {
            var pair = parameters[i].split('=');
            request[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
        return request;
    }

    // Enables or disables the sort criteria section based off of the neuralytics sort drop-down.
    function updateSorts(disableSorts, objectType) {
        // Figure out if we are on a lead list
        if (typeof objectType !== 'string') {
            if (typeof disableSorts === 'object') {
                objectType = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value;
            } else {
                objectType = '{!JSENCODE(DialerQuery__c.ObjectType__c)}'
            }
        }
        var isNeuralSortable = (objectType === 'Lead' || objectType === 'Contact');

        qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').attr('disabled', !isNeuralSortable);
        if (!isNeuralSortable) {
            // Not a lead or contact list, disable neuralytics
            qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').val('Off');
            disableSorts = false;
        }

        // Figure out if sorting should be on or off
        if (typeof disableSorts !== 'boolean') {
            if ({!IsSeekQuery}) {
                // Seek List. Get the setting from the URL
                var searchParams = getSearchParameters();
                disableSorts = searchParams['neuralytics'] == 1;
            } else {
                disableSorts = qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').val() == "On";
            }
        }

        // Enable/disable the sort drop-downs and the neuralytics sort message
        qbjq('#neuralytics_sort_message').css('display', disableSorts ? 'block' : 'none');
        disableSortFields(disableSorts);
    }

    //
    function noPhoneNumberSetting () {
        if ({!IsSeekQuery}) {
            var searchParams = getSearchParameters();
            var includeNoPhoneNumber = searchParams['nophone'] == 1;
            document.getElementById('{!$Component.QueryBuilder.editPage.no_phone_number}').value = includeNoPhoneNumber;
            document.getElementById('{!$Component.QueryBuilder.editPage.seekInitiative_editPage_no_phone_number}').checked = includeNoPhoneNumber;
        }
    }
    /**
     * Disables/enables the sorting drop-downs.
     */
    function disableSortFields(disabled) {
        for (var i=1; i<=2; i++) {
            qbjq('#QueryBuilder\\:editPage\\:scol' + i).attr("disabled", disabled);
            qbjq('#QueryBuilder\\:editPage\\:sort' + i).attr("disabled", disabled);
        }
    }

    /*
     * In order to do a request to Apex, required fields must be populated.  The following functions are a hack to allow this to happen if the user
     * has not set the required fields.
     */
    function setTemporaryName() {
        document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').disabled = true;
        if (document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value == '') {
            document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value = blank_query_name;
        }
    }

    function unsetTemporaryName() {
        document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').disabled = false;
        if (document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value == blank_query_name) {
            document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value = '';
        }
    }

    function addItemsToListByDataSource() {
        var reportRadioButton = document.getElementById('{!$Component.QueryBuilder.editPage.data_source}:1');
        if (reportRadioButton && reportRadioButton.checked) {
            var reportId = qbjq('#QueryBuilder\\:editPage\\:reportid_src').val();
            var reportIdColumn = qbjq('#QueryBuilder\\:editPage\\:reportidcolumn_src').val();
            var reportFolderId = qbjq('#QueryBuilder\\:editPage\\:reportfolder_src').val();
            addItemsToListFromReport(reportId, reportIdColumn, reportFolderId);
        } else {
            addItemsToList();
        }
    }

    function checkAddItemsToListFromReportStatus() {
        addItemsComplete();
    }

    function addItemsComplete() {
        if (!document.getElementById('{!$Component.QueryBuilder.editPage.duel_select_0}')) {
            reloadSeekInitiative();
        }

        var totalDiv = document.getElementById('{!$Component.QueryBuilder.editPage.sf_total_items}');
        var total    = totalDiv ? parseInt(totalDiv.innerHTML) : 0;
        var do_save = true;
        var r = document.getElementById('{!$Component.QueryBuilder.editPage.data_source}:1');
        if (total == 0 && r && r.checked) {
            do_save = confirm('Your chosen report and Primary Record ID appear to be valid, '
                +'but the report contains no data. Do you want to save '
                +'the Domino list anyway, or choose a different report?');
        }

        if (do_save) {
            if (!quick_save) {
                /* give reloadSeekInitiative time to initialize if we redirect too soon, insidesales.com is never signaled to sync the seek settings */
                setTimeout("redirectToView()", 1000);
            } else {
                setTimeout("hideStatuses()", 3000);
                if (show_total) {
                    var id = getDialerQueryId();
                    if (id) {
                        var extra = '';
                        if ({!IsSeekQuery}) {
                            var index = location.search.indexOf("neuralytics");
                            if (index != -1) {
                                var start = index;
                                var end   = index + 13;
                                extra = '&' + location.search.substring(start, end);
                            }
                        } else {
                            var sort_on = qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').val();
                            if (sort_on == 'Off') {
                                extra = '&neuralytics=0';
                            } else if (sort_on == 'On') {
                                extra = '&neuralytics=1';
                            }
                        }

                        window.open(
                            '/apex/Query_Builder_Preview?id=' + id + extra,
                            '_blank',
                            'width=850,height=900,scrollbars=yes'
                        );
                    }
                }
                toggleSaveBtns(false);
            }
        } else {
            toggleSaveBtns(false);
        }
    }

    function prepEmailFolders() {
        // copy the data out of the emailFolders field
        var email_folders = document.getElementById('QueryBuilder:editPage:selectedEmailFolders');
        if (email_folders == null) {
            return;
        }

        var email_folder_options = [];
        for (var i = 0; i < email_folders.options.length; i++) {
            email_folder_options[email_folder_options.length] = email_folders.options[i].value;
        }
        document.getElementById('{!$Component.QueryBuilder.editPage.emailFoldersSelected}').value = email_folder_options.join(';');

        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        for (var i=0; i < available_folders.children.length; i++) {
            var tmp_option = available_folders.children[i];
            tmp_option.selected = false;
        }
    }

    function move_email_folders_right() {
        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        var selected_folders = document.getElementById('QueryBuilder:editPage:selectedEmailFolders');
        for (var i = available_folders.children.length - 1; i >= 0; i--) {
            var tmp = available_folders.children[i];
            if (tmp.selected) {
                tmp.parentNode.removeChild(tmp);
                selected_folders.appendChild(tmp);
            }
        }
    }

    function move_email_folders_left() {
        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        var selected_folders = document.getElementById('QueryBuilder:editPage:selectedEmailFolders');
        for (var i = selected_folders.children.length - 1; i >= 0; i--) {
            var tmp = selected_folders.children[i];
            if (tmp.selected) {
                tmp.parentNode.removeChild(tmp);
                available_folders.appendChild(tmp);
            }
        }
    }

    /*
     * toggle all save buttons
     */
    function toggleSaveBtns(dis) {
        if (undefined == dis) {
            dis = false;
        }
        var btns = [
            'save', 'save2'
            , 'save_s', 'save_s2'
            , 'savequick', 'savequick2'
            , 'savequick_s', 'savequick_s2'
            , 'saveview', 'saveview2'
            , 'saveview_s', 'saveview_s2'
        ];

        for (var i=0;i<btns.length;i++) {
            toggleBtn(btns[i],dis);
        }
    }

    /*
     * toggle whether or not the
     * last-clicked button is disabled
     */
    function toggleBtn(btn,dis) {
        if (undefined == dis) {
            dis = false;
        }
        b=qbjq('#QueryBuilder\\:editPage\\:'+btn);
        b.attr('disabled', dis);
        if (dis) {
            b.addClass('btnDisabled')
        } else {
            b.removeClass('btnDisabled')
        }
    }

    /*
     * do a quick save
     */
    function saveClickQuick(do_unselect) {
        return saveClick(do_unselect,true);
    }

    /*
     * do a view results upon "View Query Results" click
     */
    function saveClickView() {
        return saveClick(false,true,true);
    }

    /*
     * handle a save click
     */
    function saveClick(do_unselect, is_quick, do_show) {
        if (validateFilters() && validateReport()) {
            toggleSaveBtns(true);

            if (undefined == is_quick) {
                is_quick=false;
            }

            if (undefined == do_unselect) {
                do_unselect=false;
            }

            if (undefined == do_show) {
                do_show=false;
            }

            if (do_unselect) {
                unselectRoles();
            }

            quick_save = is_quick;
            show_total = do_show;
            prepEmailFolders();

            // clear checkboxes
            var cb = document.getElementsByName('{!$Component.QueryBuilder.editPage.picklist_options_checkbox}');
            for (var i = 0; i < cb.length; i++) {
                if (cb[i].type == 'checkbox') {
                    cb[i].checked = false;
                }
            }

            // If a report object has been selected, use it as the list object type
            setObjectTypeFromReport();

            saveQB();
            return false;
        }
        return false;
    }

    function echoStatusAndMirror(msg) {
        var me = qbjq(this);
        var mirror = qbjq('#savestatus_mirror');

        me.css('display', 'inline');
        mirror.css('display', 'inline');
        mirror.html(msg);
    }

    function rerenderCallingHours()
    {
        var max_calling_hour = qbjq("#QueryBuilder\\:editPage\\:call_end_time").attr("disabled", true).val();
        qbjq("#calling_hours_range").prop("current_max", max_calling_hour);
        rerenderCallingHoursPanel();
    }

    function filterCallingHoursMax()
    {
        var min = parseInt(document.getElementById('{!$Component.QueryBuilder.editPage.call_start_time}').value);
        if (min == 'NaN') {
            min = 0;
        }

        qbjq("#QueryBuilder\\:editPage\\:call_end_time option").filter(function() {
            var max = parseInt(this.value);
            return max != 'NaN' && max <= min; 
        }).remove();

        var max = qbjq("#calling_hours_range").prop("current_max");
        qbjq("#calling_hours_range").removeProp("current_max");

        qbjq("#QueryBuilder\\:editPage\\:call_end_time")
            .find("option")
                .each(function() {
                    if (this.value === max) {
                        this.selected = true;
                    }
                })
                .end()
            .removeAttr("disabled");
    }

    function rerenderDialsBetween()
    {
        max = qbjq("#QueryBuilder\\:editPage\\:dials_between_max_simple").attr("disabled", true).val();
        qbjq("#dials_between_range").prop("current_max", max);
        rerenderDialsBetweenPanel();
    }

    function filterDialsBetweenMax()
    {
        dials_between_min = parseInt(document.getElementById('{!$Component.QueryBuilder.editPage.dials_between_min_simple}').value);
        if (dials_between_min == 'NaN') {
            dials_between_min = 0;
        }

        qbjq("#QueryBuilder\\:editPage\\:dials_between_max_simple option").filter(function() {
            var max = parseInt(this.value);
            return max != 'NaN' && max < dials_between_min; 
        }).remove();

        var max = qbjq("#dials_between_range").prop("current_max");
        qbjq("#dials_between_range").removeProp("current_max");

        qbjq("#QueryBuilder\\:editPage\\:dials_between_max_simple")
            .find("option")
                .each(function() {
                    if (this.value === max) {
                        this.selected = true;
                    }
                })
                .end()
            .removeAttr("disabled");
    }

    function setObjectType(){
        setTemporaryName();
        updateObjectType(document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value);
    }
    function postObjectTypeChange() {
        for (i=1 ;i<=10; i++) {
            setFilterObjectType(i);
            buildFieldTypeMap(i);
            updateOperator(i);
            resetValue(i);
        }
        unsetTemporaryName();
        toggleSaveBtns(false);

        checkLicense('neur',
            function (data) {
                if (data.message) {
                    updateSorts(null, document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value);
                }
            }
        );
    }

    function setFilterObjectType(i){
        setTemporaryName();
        document.getElementById('QueryBuilder:editPage:fcol'+i).disabled = true;
        document.getElementById('QueryBuilder:editPage:fop'+i).disabled = true;
        document.getElementById('QueryBuilder:editPage:fval'+i).disabled = true;
        window['updateFilterObjectType'+i](document.getElementById('QueryBuilder:editPage:fobj'+i).value);
    }
    function enableFilterRow(i){
        unsetTemporaryName();
        document.getElementById('QueryBuilder:editPage:fcol'+i).disabled = false;
        document.getElementById('QueryBuilder:editPage:fop'+i).disabled = false;
        document.getElementById('QueryBuilder:editPage:fval'+i).disabled = false;
        buildFieldTypeMap(i);
        updateOperator(i);
        resetValue(i);
    }
    function objectLimitCallsToByAccount() {
        if ({!IsAccountTeamsEnabled}) {
            var objectTypes = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}');
            var objectIndex = objectTypes.selectedIndex;
            var objectValue = objectTypes[objectIndex].value;

            if(objectValue == "Account") {
                enableAccountTeamOption();
            } else if(objectValue == "Opportunity") {
                var opportunityTypes = document.getElementById('{!$Component.QueryBuilder.editPage.opportunity_type}');
                var opportunityIndex = opportunityTypes.selectedIndex;
                var opportunityValue = opportunityTypes[opportunityIndex].value;

                if (opportunityValue == "Opportunity_Account") {
                    enableAccountTeamOption();
                } else {
                    disableAccountTeamOption();
                }
            } else if(objectValue == "Case") {
                var caseTypes = document.getElementById('{!$Component.QueryBuilder.editPage.case_type}');
                var caseIndex = caseTypes.selectedIndex;
                var caseValue = caseTypes[caseIndex].value;

                if (caseValue == "Case_Account") {
                    enableAccountTeamOption();
                } else {
                    disableAccountTeamOption();
                }
            } else {
                disableAccountTeamOption();
            }
        }
    }
    
    function initReportToggle(){
        if(qbjq("#QueryBuilder\\:editPage\\:data_source\\:1").prop("checked")){
            qbjq("#QueryBuilder\\:editPage\\:saveview2").hide();
            qbjq("#QueryBuilder\\:editPage\\:saveview").hide();
        }
        qbjq("#QueryBuilder\\:editPage\\:data_source\\:1").click(function(){
            qbjq("#QueryBuilder\\:editPage\\:saveview2").hide();
            qbjq("#QueryBuilder\\:editPage\\:saveview").hide();
        });
        qbjq("#QueryBuilder\\:editPage\\:data_source\\:0").click(function(){
            qbjq("#QueryBuilder\\:editPage\\:saveview2").show();
            qbjq("#QueryBuilder\\:editPage\\:saveview").show();
        });
    }

    </script>
    <input id="simple_seek" type="hidden" value="{!IsSimpleSeek}"/>
    <apex:outputPanel rendered="{!IsSeekQuery}">
        <script type="text/javascript">
            qbjq(function() {
                // Disable the sorts, if the company has a neuralytics license,
                // and the seek list uses smart sort.
                checkLicense('neur',
                    function (data) {
                        if (data.message) {
                            updateSorts();
                        }
                    });
            });
        </script>
    </apex:outputPanel>
    <div class="bPageBlock bEditBlock secondaryPalette">
        <apex:form id="editPage">
            <apex:outputPanel id="pageMsgs">
                <apex:pageMessages id="pageMsgsInner"/>
            </apex:outputPanel>
            <div class="pbHeader">
                <table width="100%"><tbody>
                    <tr><td>
                        <table style="border: 1px dashed red; display:none; "><tbody>
                            <tr><td>
                                <apex:outputPanel id="dq_data">
                                    <table><tbody>
                                        <tr><td>DialerInitiativeId__c:  </td><td><apex:outputField value="{!qbdialer__DialerQuery__c.qbdialer__DialerInitiativeId__c}"/></td></tr>
                                        <tr><td>sf_query_id:            </td><td><apex:outputText id="sf_query_id"                   value="{!DialerQueryId}"/></td></tr>
                                        <tr><td>sf_dialer_initiative_id:</td><td><apex:outputText id="sf_dialer_initiative_id"       value="{!DialerInitiativeId}"/></td></tr>
                                        <tr><td>sf_seek_initiative_id:  </td><td><apex:outputText id="sf_seek_initiative_id"         value="{!qbdialer__DialerQuery__c.qbdialer__SeekInitiativeId__c}"/></td></tr>
                                        <tr><td>sf_query_name:          </td><td><apex:outputText id="sf_query_name"                 value="{!QueryName}"/></td></tr>
                                        <tr><td>sf_query_limit_calls_to:</td><td><apex:outputText id="sf_query_limit_calls_to"       value="{!qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c}"/></td></tr>
                                        <tr><td>sf_query_start_time:    </td><td><apex:outputText id="sf_query_start_time"           value="{!qbdialer__DialerQuery__c.qbdialer__StartTime__c}"/></td></tr>
                                        <tr><td>sf_query_end_time:      </td><td><apex:outputText id="sf_query_end_time"             value="{!qbdialer__DialerQuery__c.qbdialer__EndTime__c}"/></td></tr>
                                        <tr><td>sf_save_error:          </td><td><apex:outputText id="sf_save_error"                 value="{!SaveError}"/></td></tr>
                                        <tr><td>reportid:               </td><td><apex:outputText id="sf_report_id"                  value="{!qbdialer__DialerQuery__c.qbdialer__ReportId__c}"/></td></tr>
                                        <tr><td>reportfolder:           </td><td><apex:outputText id="sf_report_folder"              value="{!qbdialer__DialerQuery__c.qbdialer__ReportFolder__c}"/></td></tr>
                                        <tr><td>reportidcolumn:         </td><td><apex:outputText id="sf_report_id_column"           value="{!qbdialer__DialerQuery__c.qbdialer__ReportIdColumn__c}"/></td></tr>
                                        <tr><td>ObjectType:             </td><td><apex:outputText id="sf_object_type"                value="{!qbdialer__DialerQuery__c.qbdialer__ObjectType__c}"/></td></tr>
                                        <tr><td>OpportunityType:        </td><td><apex:outputText id="sf_opportunity_type"           value="{!qbdialer__DialerQuery__c.qbdialer__OpportunityType__c}"/></td></tr>
                                        <tr><td>Total Items:            </td><td><apex:outputText id="sf_total_items"                value="{!qbdialer__DialerQuery__c.qbdialer__TotalItems__c}"/></td></tr>
                                    </tbody></table>
                                </apex:outputPanel>
                            </td></tr>
                            <tr><td><pre><apex:outputText escape="false" id="built_query" value="Query: {!CurrentWhereClause}"/></pre></td></tr>
                        </tbody></table>
                    </td></tr>
                    <tr><td class="pbButtonb" align="center">
                        <apex:outputPanel rendered="{!IsDominoQuery}">
                            <apex:commandButton value=" Save " id="save"       onclick="return saveClick(true);" title=" Save "/>
                            <apex:commandButton value=" Quick Save " id="savequick" onclick="return saveClickQuick(true,true);"  title=" Quick Save " />
                            <apex:commandButton value=" View Query Results " id="saveview" onclick="return saveClickView();"  title=" View Query Results " rerender="pageMsgs" />
                            <apex:commandButton value=" Cancel "     action="{!DialerQueryCancel}"                                     title=" Cancel "     immediate="true"/>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!IsSeekQuery}">
                            <apex:commandButton value=" Save & Close " id="save_s"       onclick="return saveClick();" title=" Save & Close "       rerender="pageMsgs"/>
                            <apex:commandButton value=" Quick Save " id="savequick_s"         onclick="return saveClickQuick(false,true);"  title=" Quick Save "         rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                            <apex:commandButton value=" View Query Results " id="saveview_s" onclick="return saveClickView();"  title=" View Query Results " rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                            <apex:commandButton value=" Cancel "             onclick="top.window.close();return false;"        title=" Cancel "/>
                        </apex:outputPanel>
                        <apex:actionFunction name="saveQB" action="{!saveQB}" status="querySaveStatus" rerender="dq_data,bool_filter_error,pageMsgs" oncomplete="sendSyncRequest()">
                            <apex:param name="selected_field" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="sendSyncRequest" action="{!sendSyncRequest}" oncomplete="checkSaveStatus()" />

                        <apex:actionFunction name="fetchOrgHost" action="{!getConfigHost}" status="querySaveStatus" rerender="dq_data,bool_filter_error,pageMsgs" oncomplete="checkSaveStatus()">
                            <apex:param name="selected_field" value=""/>
                        </apex:actionFunction>

                        <apex:actionFunction name="saveSelectedQBRoles" action="{!saveSelectedQBRoles}" status="roleSaveStatus" rerender="dq_data" oncomplete="emptyList()">
                            <apex:param name="roles" value=""/>
                        </apex:actionFunction>
                        <apex:actionfunction name="emptyList"                    action="{!emptyList}"                    status="emptyListStatus"          oncomplete="addItemsToListByDataSource()"/>
                        <apex:actionfunction name="addItemsToList"               action="{!addItemsToList}"               status="addItemsStatus"           oncomplete="addItemsComplete()" rerender="pageMsgs,add_item_count,built_query,dq_data"/>
                        <apex:actionFunction name="addItemsToListFromReport"     action="{!addItemsToListFromReport}"     status="addItemsFromReportStatus" oncomplete="checkAddItemsToListFromReportStatus()">
                            <apex:param assignTo="{!reportId}" name="ReportId" value=""/>
                            <apex:param assignTo="{!reportObjectId}" name="ReportIdColumn" value=""/>
                            <apex:param assignTo="{!reportFolderId}" name="ReportFolderId" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="reloadSeekInitiative" action="{!reloadSeekInitiative}" oncomplete=""/>
                    </td></tr>
                    <tr><td class="pbTitle" align="center">
                        <apex:actionStatus id="querySaveStatus"
                            onstart="echoStatusAndMirror('...saving query...')"
                            startText="...saving query..."
                            stopText=""
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="display:none;"/>
                        <apex:actionStatus id="roleSaveStatus"
                            onstart="echoStatusAndMirror('...saving roles...')"
                            startText="...saving roles..."
                            stopText=""
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:actionStatus id="addItemsStatus"
                            onstart="echoStatusAndMirror('...adding items to list...')"
                            onstop="echoStatusAndMirror('...save complete...')"
                            startText="...adding items to list..."
                            stopText="...save complete..."
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:actionStatus id="addItemsFromReportStatus"
                            onstart="echoStatusAndMirror('...adding items to list from report...')"
                            onstop="echoStatusAndMirror('')"
                            startText="...adding items to list from report..."
                            stopText=""
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:actionStatus id="emptyListStatus"
                            onstart="echoStatusAndMirror('...removing items from list...')"
                            onstop="this.style.display='none';"
                            startText="...removing items from list..."
                            stopText="...list empty..."
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:outputPanel layout="block" id="add_item_count" style="display:none">Total Items Added: {!qbdialer__DialerQuery__c.qbdialer__TotalItems__c}</apex:outputPanel>
                    </td></tr>
                </tbody></table>
            </div>

            <div id="qb_filter_error" style="display: none;" class="message errorM3">
                <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
                    <tbody>
                        <tr valign="top">
                            <td>
                                <img alt="ERROR" class="msgIcon" src="/s.gif" title="ERROR" />
                            </td>
                            <td class="messageCell">
                                <div id="" class="messageText">
                                    <span id="" style="color:#cc0000"><h4>Error:</h4></span>There are problems with your filters.<br />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td></td><td></td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <apex:outputPanel id="panel" layout="block" styleClass="pbBody">
                <apex:outputPanel id="queryname_datasource_panel">
                    <div class="pbSubblock">
                        <div class="pbSubheader first tertiaryPalette">
                            <span class="pbSubExtra">
                                <span class="requiredLegend">
                                    <span class="requiredExampleOuter"><span class="requiredExample">&nbsp;</span></span>
                                    <span class="requiredText"> = Required Information</span>
                                </span>
                            </span>
                            <h3>Enter Query Name<apex:outputPanel rendered="{!IsDominoQuery}"> and Data Source</apex:outputPanel></h3>
                        </div>
                        <div class="pbSubbody">
                            <table><tbody>
                                <tr>
                                    <td class="labelCol requiredInput" style="white-space:nowrap"><label>Query Name:</label></td>
                                    <td class="dataCol">
                                        <div class="requiredInput">
                                            <div class="requiredBlock"></div>
                                            <apex:inputField id="query_name" value="{!qbdialer__DialerQuery__c.name}" required="true" style="{!QueryNameStyle}"/>
                                            <div class="errorMsg" style="display:none" id="QueryBuilder:editPage:query_name_error"><strong>Error:</strong> You must enter a value</div>
                                        </div>
                                    </td>
                                    <apex:outputPanel rendered="{!IsDominoQuery}">
                                        <td class="labelCol" style="white-space:nowrap"><label>Caller ID:</label></td>
                                        <td class="dataCol" width="100%">
                                            <apex:selectList id="caller_id_type" size="1" title="Caller ID" value="{!qbdialer__DialerQuery__c.qbdialer__CallerIdType__c}" onchange="updateCallerIdDisplay()"> 
                                                <apex:selectOptions value="{!CallerIdOptions}"/>
                                            </apex:selectList>
                                            <span id="caller_id_span" style="display: {!IF(IsCustomCallerId,'inline','none')}">
                                                <apex:inputField id="caller_id" value="{!qbdialer__DialerQuery__c.qbdialer__Caller_Id__c}"/>
                                            </span>
                                            <span id="local_presence_span" style="display: {!IF(IsLocalPresenceCallerId,'inline','none')}">
                                                <apex:inputHidden id="use_local_presence" value="{!qbdialer__DialerQuery__c.qbdialer__Use_Local_Presence__c}" />
                                                <select id="local_presence_block_select" onchange="qbjq('.bucket_id').val(qbjq(this).val());"></select>
                                            </span>
                                            <span style="display: none;">
                                                <apex:inputField id="bucket_id" styleclass="bucket_id" value="{!qbdialer__DialerQuery__c.qbdialer__Local_Presence_Bucket__c}" />
                                            </span>
                                        </td>
                                    </apex:outputPanel>
                                </tr>
                                <tr>
                                    <apex:outputPanel rendered="{!IsSeekQuery}">
                                        <td class="labelCol"><label>Description:</label></td>
                                        <td class="dataCol">
                                            <apex:inputField id="query_description" value="{!qbdialer__DialerQuery__c.qbdialer__Description__c}"/>
                                        </td>
                                         <td class="dataCol" style="width:100%;">
                                            <apex:inputHidden id="no_phone_number" value="{!qbdialer__DialerQuery__c.qbdialer__NoPhoneNumber__c}" />
                                        </td>    
                                    </apex:outputPanel>
                                </tr>
                                <tr>
                                    <apex:outputPanel rendered="{!IsSeekQuery}">
                                    <td></td>
                                    <td class="dataCol" style="width:100%;">
                                        <apex:inputCheckbox disabled="true" id="seekInitiative_editPage_no_phone_number"/>
                                        <label>Include records without phone numbers</label>
                                    </td> 
                                    </apex:outputPanel>
                                </tr> 
                                <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}"><tr>
                                    <apex:outputPanel rendered="{!IsDominoQuery}">
                                        <td class="labelCol requiredInput" style="white-space:nowrap"><label>Dialer Panel:</label></td>
                                        <td class="dataCol" style="white-space: nowrap;">
                                            <div class="requiredInput">
                                                <div class="requiredBlock"></div>
                                                <span id="dialer_panel_span">
                                                    <apex:selectList id="default_dialer_panel_id" size="1" title="Dialer_Panel" value="{!DefaultDialerPanel}">
                                                        <apex:selectOptions value="{!DialerPanelOptions}"/>
                                                    </apex:selectList>
                                                </span>
                                            </div>
                                        </td>
                                    </apex:outputPanel>
                                    <td class="labelCol" style="white-space: nowrap; padding-left: 70px"><label>Call 800 Numbers:</label></td>
                                    <td class="dataCol" style="width:100%;">
                                        <apex:inputCheckbox value="{!qbdialer__DialerQuery__c.qbdialer__EightHundred__c}"/>
                                    </td>
                                </tr></apex:outputPanel>
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                    <tr>
                                        <td class="labelCol requiredInput" style="white-space:nowrap"><label>Data Source:</label></td>
                                        <td class="dataCol">
                                            <div class="requiredInput">
                                                <div class="requiredBlock"></div>
                                                <apex:actionRegion >
                                                    <apex:selectRadio id="data_source" value="{!qbdialer__DialerQuery__c.qbdialer__DataSource__c}" onclick="updateDataSourceDisplay(this.value, true)">
                                                        <apex:selectOptions value="{!AvailableDataSources}" />
                                                        <apex:actionSupport event="onclick" reRender="panel"/>
                                                    </apex:selectRadio>
                                                </apex:actionRegion>
                                            </div>
                                        </td>
                                        <td></td>
                                        <td class="dataCol" style="width:100%;">
                                            <apex:inputCheckbox value="{!qbdialer__DialerQuery__c.qbdialer__NoPhoneNumber__c}"/>
                                            <label for="QueryBuilder:editPage:no_phone_number">Include records without phone numbers</label>
                                        </td>                                
                                    </tr>
                                    <tr id="report_panel">
                                        <td colspan="4">
                                            <apex:actionRegion >
                                                <!-- since ajax won't work unless all required fields are valid, actionregion marks what we want the server to process-->
                                                <table cellpadding="2" cellspacing="2"><tbody>
                                                    <tr>
                                                        <td colspan="3" style="width:700px">
                                                            Reports must be in a public folder and contain at least one column containing the record ID.
                                                            Opportunity lists must contain an ID column for both the Contact ID and the Opportunity ID.
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="labelCol" nowrap="true"><label>Report Folder:</label></td>
                                                        <td class="dataCol" nowrap="true">
                                                            <div class="requiredInput">
                                                                <div class="requiredBlock"></div>
                                                                <apex:actionRegion >
                                                                    <apex:selectList id="reportfolder_src" value="{!folderId}" size="1" styleClass="report_select">
                                                                        <apex:selectOptions value="{!FolderList}" /> <!-- from QueryBuilderReportAPIExtension -->
                                                                        <apex:actionSupport event="onchange" reRender="reportRerenderPanel" oncomplete="reRenderReportObj();" status="fetchReportStatus" action="{!updateReportFolderId}"/>
                                                                    </apex:selectList>
                                                                </apex:actionRegion>
                                                            </div>
                                                        </td>
                                                        <td style="width:160px;">
                                                                <apex:actionStatus id="fetchReportStatus" style="display:none" startText=" . . . retrieving report list . . . " startStyle="display:inline" stopStyle="display:none"/>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="labelCol" nowrap="true"><label>Report:</label></td>
                                                        <td class="dataCol" nowrap="true">
                                                            <apex:outputPanel id="reportRerenderPanel"> <!-- reRender by the actionSupport onchange event on id=reportfolder_src -->
                                                                <div class="requiredInput">
                                                                    <div class="requiredBlock"></div>
                                                                    <apex:actionRegion >
                                                                        <apex:selectList id="reportid_src" value="{!reportId}" size="1" styleClass="report_select">
                                                                            <apex:selectOptions value="{!ValidReportsInFolder}" />
                                                                            <apex:actionSupport event="onchange" reRender="reportObjects" status="fetchReportObjectStatus" action="{!updateReportId}"/>
                                                                        </apex:selectList>
                                                                    </apex:actionRegion>
                                                                </div>
                                                                <div class="errorMsg" style="display:none" id="loaded_invalid_report_span">&nbsp;<strong>Error:</strong> Invalid Report
                                                                    <img src="{!URLFOR($Resource.c2c_resources, '/img/help_icon_white_square.png')}" style="vertical-align: top; margin-right: 8px;" title="This report does not contain a column for record ID. Add a column for record ID to the report and try again." />
                                                                </div>
                                                            </apex:outputPanel> <!-- end reRedner section -->
                                                        </td>
                                                        <td style="width:190px;">
                                                            <apex:actionStatus id="fetchReportObjectStatus" 
                                                                style="display:none"
                                                                startText=" . . . retrieving report objects . . . "
                                                                startStyle="display:inline"
                                                                stopStyle="display:none"
                                                            />
                                                         </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="labelCol" nowrap="true"><label>Report Object to Use:</label>
                                                            <td class="dataCol" nowrap="true">
                                                                <apex:outputPanel id="reportObjects"> <!-- reRender by the actionSupport onchange event on id=reportfolder_src AND id=reportid_src -->
                                                                    <div class="requiredInput">
                                                                        <div class="requiredBlock"></div>
                                                                        <apex:actionRegion >
                                                                            <apex:selectList id="reportidcolumn_src" value="{!reportObjectId}" size="1" styleClass="report_select">
                                                                                <apex:selectOptions value="{!AvailableReportObjects}" />
                                                                                <apex:actionSupport event="onchange" action="{!updateReportObjectId}"/>
                                                                            </apex:selectList>
                                                                        </apex:actionRegion>
                                                                    </div>
                                                                </apex:outputPanel> <!-- end of the reRender panel -->
                                                            </td>
                                                        </td>
                                                    </tr>
                                                </tbody></table>
                                                <apex:actionFunction name="rerenderReportObjectToUse" status="fetchReportObjectStatus" rerender="reportObjects" />
                                                <script>
                                                    function reRenderReportObj(){
                                                        rerenderReportObjectToUse();
                                                    }
                                                </script>
                                            </apex:actionRegion>
                                        </td>
                                    </tr>
                                </apex:outputPanel>
                                <tr id="object_type_panel">
                                    <td class="labelCol" style="white-space: nowrap"><label>Object To Call:</label></td>
                                    <td class="dataCol" colspan="3">
                                        <apex:outputPanel >
                                            <div>
                                                <apex:selectList id="object_type" size="1" title="Object Type" onchange="preObjectTypeChange();setObjectType();objectLimitCallsToByAccount();" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__ObjectType__c}">
                                                    <apex:selectOption itemLabel="Lead"    itemValue="Lead"/>
                                                    <apex:selectOption itemLabel="Contact" itemValue="Contact"/>
                                                    <apex:selectOption itemLabel="Account" itemValue="Account"/>
                                                    <apex:selectOption itemLabel="Task" itemValue="Task" rendered="{!IsDominoQuery}"/>
                                                    <apex:selectOption itemLabel="Opportunity" itemValue="Opportunity"/>
                                                    <apex:selectOption itemLabel="Case" itemValue="Case" rendered="{!NOT(IsSimpleSeek)}"/>
                                                </apex:selectList>
                                                <apex:outputPanel rendered="{!ShowFilters}">
                                                    <apex:actionfunction name="updateObjectType"
                                                        action="{!updateObjectType}"
                                                        status="updateObjectTypeStatus"
                                                        oncomplete="postObjectTypeChange()"
                                                        rerender="dq_data,
                                                        fobj1,fcol1,
                                                        fobj2,fcol2,
                                                        fobj3,fcol3,
                                                        fobj4,fcol4,
                                                        fobj5,fcol5,
                                                        fobj6,fcol6,
                                                        fobj7,fcol7,
                                                        fobj8,fcol8,
                                                        fobj9,fcol9,
                                                        fobj10,fcol10,
                                                        sort1,sort2,scol1,scol2">
                                                        <apex:param name="object_type" value=""/>
                                                    </apex:actionFunction>
                                                    <apex:actionStatus id="updateObjectTypeStatus"
                                                        onstart="this.style.display=''"
                                                        onstop="setTimeout('document.getElementById(\'updateObjectTypeStatus.stop\').style.display=\'none\'', 3000)"
                                                        startText="...updating data for filter fields..."
                                                        stopText="...update complete..."
                                                        startStyle="font-weight:bold;font-style:italic;"
                                                        stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                                                    <apex:actionfunction name="updateFilterObjectType1"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(1)"
                                                        rerender="fcol1,fop1,fval1,field_type_list1">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="1"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType2"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(2)"
                                                        rerender="fcol2,fop2,fval2,field_type_list2">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="2"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType3"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(3)"
                                                        rerender="fcol3,fop3,fval3,field_type_list3">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="3"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType4"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(4)"
                                                        rerender="fcol4,fop4,fval4,field_type_list4">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="4"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType5"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(5)"
                                                        rerender="fcol5,fop5,fval5,field_type_list5">
                                                        <apex:param name="filter_object_type" value=""/>
                                                            <apex:param name="filter_object_index" value="5"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType6"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(6)"
                                                        rerender="fcol6,fop6,fval6,field_type_list6">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="6"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType7"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(7)"
                                                        rerender="fcol7,fop7,fval7,field_type_list7">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="7"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType8"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(8)"
                                                        rerender="fcol8,fop8,fval8,field_type_list8">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="8"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType9"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(9)"
                                                        rerender="fcol9,fop9,fval9,field_type_list9">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="9"/>
                                                    </apex:actionFunction>
                                                    <apex:actionfunction name="updateFilterObjectType10"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(10)"
                                                        rerender="fcol10,fop10,fval10,field_type_list10">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="10"/>
                                                    </apex:actionFunction>
                                                </apex:outputPanel>
                                            </div>
                                        </apex:outputPanel>
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td colspan="3" class="dataCol">
                                        <div id="case_type_select" style="display: none">
                                            <apex:selectList id="case_type" size="1" title="Case Type" onchange="objectLimitCallsToByAccount();" value="{!qbdialer__DialerQuery__c.qbdialer__CaseType__c}">
                                                <apex:selectOption itemLabel="Account" itemValue="Case_Account"/>
                                                <apex:selectOption itemLabel="Contact" itemValue="Case_Contact"/>
                                            </apex:selectList>
                                            <span>Lists based on cases will display one of two objects in the dialer--the case's related account or contact. Choose which object you would like to appear.</span>
                                        </div>
                                        <div id="opportunity_type_select" style="display: none">
                                            <apex:selectList id="opportunity_type" size="1" title="Opportunity Type" onchange="objectLimitCallsToByAccount();" value="{!qbdialer__DialerQuery__c.qbdialer__OpportunityType__c}">
                                                <apex:selectOption itemLabel="Account" itemValue="Opportunity_Account"/>
                                                <apex:selectOption itemLabel="Contact" itemValue="Opportunity_Contact"/>
                                            </apex:selectList>
                                            <span>Lists based on opportunities will display one of two objects in the dialer--the opportunity's linked account, or the opportunity contact roles. Choose which object you would like to appear.</span>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="neuralytics_panel" rendered="{!IsDominoQuery}" style="display: none">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Neuralytics<sup><apex:outputText value="&reg;" escape="false" /></sup></h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="100%" style="height:45px;"><tbody>
                                <tr><td class="dataCol">
                                    <div>
                                        <p style="font-style:italic; margin-top:0; margin-bottom:1em;">
                                        Neural Sort is a predictive system helping you know who to call and when to call.
                                        Using complex learning algorithms Neural Sort will use the data already in your system to determine which of your records are most likely to contact and sort them accordingly.
                                        </p>
                                        <table cellpadding="2" cellspacing="2"><tbody>
                                            <tr>
                                                <td class="labelCol" >
                                                    <label>Neural Sort:</label>
                                                </td>
                                                <td class="dataCol">
                                                    <apex:selectList id="neuralytics_sort" size="1" title="Neural Sort" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__SmartSort__c}">
                                                        <apex:selectOption itemLabel="On"  itemValue="On"/>
                                                        <apex:selectOption itemLabel="Off" itemValue="Off"/>
                                                    </apex:selectList>
                                                </td>
                                            </tr>
                                        </tbody></table>
                                    </div>
                                </td></tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="email_settings_panel" rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Email Settings</h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="100%"><tbody>
                                <tr><td class="dataCol">
                                    <apex:inputCheckbox id="use_salesforce_email_templates" value="{!qbdialer__DialerQuery__c.qbdialer__UseSalesforceEmailTemplates__c}" onchange="toggleEmailFolders();"/>
                                    <label for="{!$Component.QueryBuilder.editPage.use_salesforce_email_templates}">Use Salesforce Email Templates</label>

                                    <div style="width: 700px; display:{!IF(DialerQuery__c.UseSalesforceEmailTemplates__c, 'block', 'none')};" id="email_folder_panel">
                                        <br/>
                                        <div style="float: left; text-align: center;">
                                            <span style="font-weight: bold">Available Email Folders</span><br />
                                            <div style="position:absolute">
                                                <div id="loading_folders" style="text-align:left;position:relative; top: 10px; left: 10px; display:none;">
                                                    <img src="https://qbdialer.na6.visual.force.com/img/loading.gif"/> Loading Folders...
                                                </div>
                                            </div>
                                            <select multiple="true" size="10" id="QueryBuilder:editPage:availableEmailFolders" style="width: 200px; height: 150px;">
                                                <apex:repeat value="{!AvailableEmailFolderOptions}" var="option">
                                                    <option value="{!option.value}">{!option.label}</option>
                                                </apex:repeat>
                                            </select>
                                        </div>
                                        <div style="float: left; text-align: center; width: 100px;">
                                            <br/><br/><br/>
                                            Add<br/>
                                            <img src="/s.gif" alt="Add"  onclick="move_email_folders_right();"  class="picklistArrowRight" />
                                            <br/><br/>
                                            <img src="/s.gif" alt="Remove" onclick="move_email_folders_left();" class="picklistArrowLeft" />
                                            <br/>
                                            Remove
                                        </div>
                                        <div style="float: left; text-align: center;">
                                            <span style="font-weight: bold">Selected Email Folders</span><br />
                                            <select id="QueryBuilder:editPage:selectedEmailFolders" multiple="true" size="8" style="width: 200px; height: 150px;">
                                                <apex:repeat value="{!SelectedEmailFolderOptions}" var="option">
                                                    <option value="{!option.value}">{!option.label}</option>
                                                </apex:repeat>
                                            </select>
                                            <apex:inputHidden id="emailFoldersSelected"/>
                                            <apex:outputText value="{!qbdialer__DialerQuery__c.qbdialer__EmailFolders__c}" rendered="false" />
                                        </div>
                                    </div>
                                </td></tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="filter_panel" layout="block">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Specify Filter Criteria</h3></div>
                        <div class="pbSubbody">
                            <table><tbody>
                                <apex:outputPanel rendered="{!ShowCallingHours}">
                                    <tr>
                                        <td class="labelCol"><label>Calling Hours:</label></td>
                                        <td id="calling_hours_range" class="dataCol" valign="top" style="">
                                            <apex:inputCheckbox id="LimitCallingTimes" value="{!qbdialer__DialerQuery__c.qbdialer__LimitCallingTimes__c}" onclick="toggleCallingTimes(this.checked)" rendered="{!NOT(IsSimpleSeek)}" />
                                            <apex:actionFunction name="rerenderCallingHoursPanel" rerender="calling_hours_panel" oncomplete="filterCallingHoursMax()" />
                                            <apex:outputPanel id="calling_hours_panel">
                                            <apex:selectList id="call_start_time" size="1" disabled="{!IF(!LimitCallingTimes,'true','false')}" title="Start Time" value="{!qbdialer__DialerQuery__c.qbdialer__LimitStartTime__c}" onchange="rerenderCallingHours()">
                                                <apex:selectOptions value="{!TimeOptions}"/>
                                            </apex:selectList>
                                            <apex:selectList id="call_end_time" size="1"  disabled="{!IF(!LimitCallingTimes,'true','false')}" title="End Time" value="{!qbdialer__DialerQuery__c.qbdialer__LimitEndTime__c}">
                                                <apex:selectOptions value="{!TimeOptions}"/>
                                            </apex:selectList>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                                            &nbsp;<i>(Times based on the area code of the person's <br /> phone number.  This is not 100% accurate since there are some area codes that span multiple time zones.)</i>
                                            </apex:outputPanel>
                                        </td>
                                    </tr>
                                </apex:outputPanel>
                                <script type="text/javascript">
                                    function enableAccountTeamOption() {
                                        var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                        var found = findAccountTeams();
                                            if(!found) {
                                                var accountTeamOption = document.createElement("option");
                                                accountTeamOption.text = "Account Team";
                                                accountTeamOption.value = 'account_teams';
                                                limitCallsToSelect.add(accountTeamOption);
                                        }
                                    }
                                    function disableAccountTeamOption() {
                                        var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                        var found = findAccountTeams();
                                        for(var i = 0; i < limitCallsToSelect.length; i++) {
                                            if(limitCallsToSelect.options[i].value == 'account_teams') {
                                                limitCallsToSelect.remove(i);
                                                limitCallsToSelect.selectedIndex = 0; //Index of Default Value which is No Limit
                                            }
                                        }
                                    }
                                    function findAccountTeams() {
                                        var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                        var found = false;
                                        for(var i = 0; i < limitCallsToSelect.length; i++) {
                                            if(limitCallsToSelect.options[i].value == 'account_teams') {
                                                found = true;
                                            }
                                        }
                                        return found;
                                    }
                                    function checkOnlyDialOwn() {
                                        var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                        var onlyDialOwn = "{!IF(qbdialer__DialerQuery__c.qbdialer__OnlyDialOwn__c, true, false)}";
                                        var checkLimitCallsToValue = "{!JSENCODE(qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c)}";

                                        if(onlyDialOwn == 'true') {
                                            qbjq('#limit_calls_to').val('owner');
                                        }
                                    }
                                </script>
                                <apex:outputPanel >
                                    <tr id="limit_calls_to">
                                        <td class="labelCol"><label>Limit Calls To:</label></td>
                                        <td class="dataCol">
                                            <apex:selectList id="limit_calls_to" size="1" title="limit_calls_to" value="{!calls_to_limit}">
                                                <apex:selectOptions value="{!LimitCallsToOptions}"/>
                                            </apex:selectList>
                                        </td>
                                    </tr>
                                </apex:outputPanel>
                                <apex:outputPanel >
                                    <tr>
                                        <td id="dials_between_label" class="labelCol"style="display:{!IF(ShowDialFilters,'','none')};">
                                            <label>Dials are between:</label>
                                        </td>
                                        <td id="dials_between_range" class="dataCol" style="display:{!IF(ShowDialFilters,'','none')};">
                                            <apex:outputPanel rendered="{!IsSimpleSeek}">
                                                <apex:selectList id="dials_between_min_simple" size="1" title="Minimum number of dials" onchange="rerenderDialsBetween()" value="{!qbdialer__DialerQuery__c.qbdialer__MinDials__c}">
                                                    <apex:selectOptions value="{!DialCount}"/>
                                                </apex:selectList>
                                                <strong> and </strong>
                                                <apex:actionFunction name="rerenderDialsBetweenPanel" rerender="dials_between_panel" oncomplete="filterDialsBetweenMax()" />
                                                <apex:outputPanel id="dials_between_panel">
                                                    <apex:selectList id="dials_between_max_simple" size="1" title="Maximum number of dials" value="{!qbdialer__DialerQuery__c.qbdialer__MaxDials__c}">
                                                        <apex:selectOptions value="{!DialCount}"/>
                                                    </apex:selectList>
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                                                <apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__MinDials__c}" id="dials_between_min"/>
                                                <strong> and </strong>
                                                <apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__MaxDials__c}" id="dials_between_max"/>
                                            </apex:outputPanel>
                                        </td>
                                    </tr>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                                    <tr>
                                        <td class="labelCol"><label>Time Zones:</label></td>
                                        <td class="dataCol"><apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__TimeZones__c}"/></td>
                                    </tr>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                    <tr id="minutes_between_calls" style="display:{!IF(ShowDialFilters,'','none')};">
                                        <td class="labelCol"><label>Minutes between Calls:</label></td>
                                        <td class="dataCol">
                                            <apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__MinutesBetweenCalls__c}" id="minutes_between_calls_apex"/>
                                            <i>(leave blank for no filter)</i>
                                        </td>
                                    </tr>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                                    <tr>
                                        <td class="labelCol"><label>Filter By Owner:</label></td>
                                        <td class="dataCol">
                                            <apex:selectRadio id="ownership_filter" value="{!qbdialer__DialerQuery__c.qbdialer__OwnershipFilter__c}" style="display:inline-table;">
                                                <apex:selectOption id="all"   itemValue="all"   itemLabel="All"/>
                                                <apex:selectOption id="queue" itemValue="queue" itemLabel="Owned by Queue:"/>
                                            </apex:selectRadio>
                                            <apex:inputHidden id="QueueOwnership_lkid" value="{!qbdialer__DialerQuery__c.qbdialer__QueueOwnership__c}" />
                                            <input id="QueryBuilder:editPage:QueueOwnership" name="QueryBuilder:editPage:QueueOwnership" maxlength="255" size="20" readonly="true" type="text" value="{!QueueName}" style="vertical-align:top;"/>
                                            <input id="QueryBuilder:editPage:QueueOwnership_lkold" name="QueryBuilder:editPage:QueueOwnership_lkold" type="hidden" value="{!qbdialer__DialerQuery__c.qbdialer__QueueOwnership__c}" />
                                            <a href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:QueueOwnership&enableScopes=1&lkrf=&enableScopes=1&lktp=lead_queue&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:QueueOwnership').value), 600); return false;" title="Search for Queue (New Window)"><img src="/s.gif" alt="Search for Queue (New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Search for Queue (New Window)" style="vertical-align:top;"/></a>
                                            (applies to Leads only)
                                        </td>
                                    </tr>
                                    <tr id="{!$Component.QueryBuilder.editPage}:filter_by_campaign_name" style="display:{!IF(ShowCampaigns,'','none')};">
                                        <td class="labelCol"><label>Filter By Campaign:</label></td>
                                        <td class="dataCol">
                                            <apex:inputHidden id="Campaign_lkid" value="{!qbdialer__DialerQuery__c.qbdialer__CampaignId__c}"/>
                                            <input readonly="true" id="QueryBuilder:editPage:Campaign" name="QueryBuilder:editPage:Campaign" maxlength="255" size="20" type="text" value="{!CampaignName}" onchange="if (arguments[0] != 1) {setTemporaryName();updateTempCampaign(document.getElementById('{!$Component.QueryBuilder.editPage.Campaign_lkid}').value);} if(this.value=='') document.getElementById('QueryBuilder:editPage:Campaign_lkid').value = ''" onblur="this.onchange(1,3)" />
                                            <input id="QueryBuilder:editPage:Campaign_lkold" name="QueryBuilder:editPage:Campaign_lkold" type="hidden" value="{!qbdialer__DialerQuery__c.qbdialer__CampaignId__c}" />
                                            <a href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:Campaign&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:Campaign').value), 600); setLastMousePosition(event); return false;" id="fentityvalue2_lkwgt" title="Campaign Name Lookup (New Window)"><img src="/s.gif" alt="Campaign Name Lookup (New Window)"  class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Campaign Name Lookup (New Window)"/></a>
                                            <input class="btn" title="Clear" onclick="clearCampaign()" value="Clear" type="button" name="clear_campaign"/>
                                            <i>(leave blank for no filter)</i>
                                        </td>
                                    </tr>
                                    <tr id="{!$Component.QueryBuilder.editPage}:filter_by_campaign_status" style="display:{!IF(ShowCampaigns,'','none')};">
                                        <td class="labelCol"><label>Campaign Status:</label></td>
                                        <td class="dataCol">
                                            <apex:outputPanel id="campaign_members_status_panel">
                                                <apex:selectList id="campaign_member_status" size="1" title="Campaign Member Status" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__CampaignMemberStatus__c}">
                                                    <apex:selectOptions value="{!CampaignMemberStatuses}"/>
                                                </apex:selectList>
                                            </apex:outputPanel>
                                            <apex:actionfunction name="updateTempCampaign" id="updateTempCampaign"  action="{!updateTempCampaign}" rerender="campaign_members_status_panel" oncomplete="unsetTemporaryName()">
                                                <apex:param name="firstParam" assignTo="{!temp_campaign}" value="" />
                                            </apex:actionfunction>
                                        </td>
                                    </tr>
                                </apex:outputPanel>
                                <tr>
                                    <td class="labelCol"><label>Filter Fields:</label></td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td><table><tbody>
                                        <tr>
                                            <th scope="col">&nbsp;</th>
                                            <th scope="col">Object</th>
                                            <th scope="col">Field</th>
                                            <th scope="col">Operator</th>
                                            <th scope="col">Value</th>
                                        </tr>
                                        <tr id="frow1">
                                            <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f1" class="textBox">1.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(1)" value="{!FilterObject1}" id="fobj1">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" styleclass="filterfield" onchange="updateOperator(1);resetValue(1)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_1__c}" id="fcol1">
                                                    <apex:selectOptions value="{!ObjectFieldOptions1}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop1" title="Operator 1" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_1__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp1" value="{!FilterData1}" onchange="filterDataChanged(1)"/>
                                                <apex:inputHidden id="fval1" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_1__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp1" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(1); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                                <apex:outputPanel style="display:none" id="flcam1" layout="inline">
                                                    <apex:inputHidden id="fdisp1_lkid"/>
                                                    <apex:inputHidden id="fdisp1_lkold"/>
                                                    <a title="Lookup (New Window)" href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:fdisp1&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:fdisp1').value), 600); setLastMousePosition(event); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                                <apex:outputPanel id="value_picker" layout="block" style="display:none;width:450px;height:350px;overflow:auto;position:absolute;border:1px solid black;background-color: #efefef;">
                                                    <div class="lookup">
                                                        <div class="bPageTitle">
                                                            <div class="ptBody secondaryPalette">
                                                                <div class="content"><img class="pageTitleIcon" title="" alt="" src="/s.gif"/><h1>Lookup</h1></div>
                                                            </div>
                                                        </div>
                                                        <div class="pbBody"><h2>Select the picklist values to add below.</h2></div>
                                                        <div class="topButton">
                                                            <input class="btn" title="Insert Selected" onclick="insertSelected();" value="Insert Selected" type="button" name="Done" />
                                                            <input class="btn" title="Cancel" onclick="document.getElementById('QueryBuilder:editPage:value_picker').style.display='none';" value="Cancel" type="button" name="Cancel" />
                                                        </div>
                                                        <div class="listRelatedObject lookupBlock">
                                                            <div class="bPageBlock secondaryPalette">
                                                                <div class="pbHeader"></div>
                                                                <div class="pbBody">
                                                                    <table class="list" border="0" cellSpacing="0" cellPadding="0">
                                                                        <tr class="headerRow">
                                                                            <th class="actionColumn" scope="col">&nbsp;</th>
                                                                            <th scope="col">Value</th>
                                                                        </tr>
                                                                        <tbody id="{!$Component.QueryBuilder.editPage}:date_values" style="display:none">
                                                                            <tr class="dataRow">
                                                                                <td class="actionColumn" colspan="2">
                                                                                    <select id="{!$Component.QueryBuilder.editPage}:date_value">
                                                                                        <option value="YESTERDAY">YESTERDAY</option>
                                                                                        <option value="TODAY">TODAY</option>
                                                                                        <option value="TOMORROW">TOMORROW</option>
                                                                                        <option value="LAST WEEK">LAST WEEK</option>
                                                                                        <option value="THIS WEEK">THIS WEEK</option>
                                                                                        <option value="NEXT WEEK">NEXT WEEK</option>
                                                                                        <option value="LAST MONTH">LAST MONTH</option>
                                                                                        <option value="THIS MONTH">THIS MONTH</option>
                                                                                        <option value="NEXT MONTH">NEXT MONTH</option>
                                                                                        <option value="LAST 90 DAYS">LAST 90 DAYS</option>
                                                                                        <option value="NEXT 90 DAYS">NEXT 90 DAYS</option>
                                                                                        <option value="LAST n DAYS">LAST n DAYS (replace n with desired number)</option>
                                                                                        <option value="NEXT n DAYS">NEXT n DAYS (replace n with desired number)</option>
                                                                                        <option value="LAST QUARTER">LAST QUARTER</option>
                                                                                        <option value="THIS QUARTER">THIS QUARTER</option>
                                                                                        <option value="NEXT QUARTER">NEXT QUARTER</option>
                                                                                        <option value="LAST n QUARTERS">LAST n QUARTERS (replace n with desired number)</option>
                                                                                        <option value="NEXT n QUARTERS">NEXT n QUARTERS (replace n with desired number)</option>
                                                                                        <option value="LAST YEAR">LAST YEAR</option>
                                                                                        <option value="THIS YEAR">THIS YEAR</option>
                                                                                        <option value="NEXT YEAR">NEXT YEAR</option>
                                                                                        <option value="LAST n YEARS">LAST n YEARS (replace n with desired number)</option>
                                                                                        <option value="NEXT n YEARS">NEXT n YEARS (replace n with desired number)</option>
                                                                                        <option value="LAST FISCAL QUARTER">LAST FISCAL QUARTER</option>
                                                                                        <option value="THIS FISCAL QUARTER">THIS FISCAL QUARTER</option>
                                                                                        <option value="NEXT FISCAL QUARTER">NEXT FISCAL QUARTER</option>
                                                                                        <option value="LAST n FISCAL QUARTERS">LAST n FISCAL QUARTERS (replace n with desired number)</option>
                                                                                        <option value="NEXT n FISCAL QUARTERS">NEXT n FISCAL QUARTERS (replace n with desired number)</option>
                                                                                        <option value="LAST FISCAL YEAR">LAST FISCAL YEAR</option>
                                                                                        <option value="THIS FISCAL YEAR">THIS FISCAL YEAR</option>
                                                                                        <option value="NEXT FISCAL YEAR">NEXT FISCAL YEAR</option>
                                                                                        <option value="LAST n FISCAL YEARS">LAST n FISCAL YEARS (replace n with desired number)</option>
                                                                                        <option value="NEXT n FISCAL YEARS">NEXT n FISCAL YEARS (replace n with desired number)</option>
                                                                                    </select>
                                                                                </td>
                                                                            </tr>
                                                                        </tbody>
                                                                        <tbody id="QueryBuilder:editPage:boolean_values" style="display:none">
                                                                            <tr class="dataRow">
                                                                                <td class="actionColumn"><input id="{!$Component.QueryBuilder.editPage}:chkbox0" value="True" type="radio" name="chkbox"/></td>
                                                                                <td><label for="chkbox0">True</label></td>
                                                                            </tr>
                                                                            <tr class="dataRow">
                                                                                <td class="actionColumn"><input id="{!$Component.QueryBuilder.editPage}:chkbox1" value="False" type="radio" name="chkbox"/></td>
                                                                                <td><label for="chkbox1">False</label></td>
                                                                            </tr>
                                                                        </tbody>
                                                                        <tbody id="{!$Component.QueryBuilder.editPage}:picklist_values" style="display:none">
                                                                            <tr><td nowrap="nowrap" colspan="2">
                                                                                <input type="hidden" id="picklist_type" value="checkbox" />
                                                                                <apex:outputPanel id="picklist_options">
                                                                                <div style='width:100%;height: 150px; overflow:auto' id="picklist_checkbox">
                                                                                    <apex:selectCheckboxes layout="pageDirection" style="width:100%" id="picklist_options_checkbox">
                                                                                        <apex:selectOptions value="{!PicklistOptions}"/>
                                                                                    </apex:selectCheckboxes>
                                                                                </div>
                                                                                <div style='width:100%;height: 150px; overflow:auto' id="picklist_radio">
                                                                                    <apex:selectRadio layout="pageDirection" style="width:100%" id="picklist_options_radio">
                                                                                        <apex:selectOptions value="{!PicklistOptions}"/>
                                                                                    </apex:selectRadio>
                                                                                </div>
                                                                                </apex:outputPanel>
                                                                            </td></tr>
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                                <div class="pbFooter secondaryPalette"><div class="bg"></div></div>
                                                            </div>
                                                        </div>
                                                        <div class="listElementBottomNav"></div>
                                                        <!-- End ListElement -->
                                                        <div class="bottomButton">
                                                            <input class="btn" title="Insert Selected" onclick="insertSelected();" value="Insert Selected" type="button" name="Done" />
                                                            <input class="btn" title="Cancel" onclick="document.getElementById('QueryBuilder:editPage:value_picker').style.display='none';" value="Cancel" type="button" name="Cancel" />
                                                        </div>
                                                    </div>
                                                </apex:outputPanel>
                                                <img id="QueryBuilder:editPage:loading" src="/img/loading.gif" style="position:absolute;background-color:#F3F3EC;border:1px dashed #5E5E5E;padding:20px 90px 20px 90px;display:none;" />
                                            </td>
                                            <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and1" class="textBox">AND</span></td>
                                        </tr>
                                        <tr id="frow2">
                                            <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f2" class="textBox">2.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(2)" value="{!FilterObject2}" id="fobj2">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol2" styleclass="filterfield" onchange="updateOperator(2);resetValue(2)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_2__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions2}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop2" title="Operator 2" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_2__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp2" value="{!FilterData2}" onchange="filterDataChanged(2)"/>
                                                <apex:inputHidden id="fval2" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_2__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp2" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(2); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                                <apex:outputPanel style="display:none" id="flcam2" layout="inline">
                                                    <apex:inputHidden id="fdisp2_lkid"/>
                                                    <apex:inputHidden id="fdisp2_lkold"/>
                                                    <a title="Lookup (New Window)" href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:fdisp2&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:fdisp2').value), 600); setLastMousePosition(event); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and2" class="textBox">AND</span></td>
                                        </tr>
                                        <tr id="frow3">
                                            <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f3" class="textBox">3.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(3)" value="{!FilterObject3}" id="fobj3">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol3" styleclass="filterfield" onchange="updateOperator(3);resetValue(3)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_3__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions3}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop3" title="Operator 3" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_3__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp3" value="{!FilterData3}" onchange="filterDataChanged(3)"/>
                                                <apex:inputHidden id="fval3" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_3__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp3" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(3); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                                <apex:outputPanel style="display:none" id="flcam3" layout="inline">
                                                    <apex:inputHidden id="fdisp3_lkid"/>
                                                    <apex:inputHidden id="fdisp3_lkold"/>
                                                    <a title="Lookup (New Window)" href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:fdisp3&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:fdisp3').value), 600); setLastMousePosition(event); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and3" class="textBox">AND</span></td>
                                        </tr>
                                        <tr id="frow4">
                                            <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f4" class="textBox">4.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(4)" value="{!FilterObject4}" id="fobj4">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol4" styleclass="filterfield" onchange="updateOperator(4);resetValue(4)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_4__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions4}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop4" title="Operator 4" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_4__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp4" value="{!FilterData4}" onchange="filterDataChanged(4)"/>
                                                <apex:inputHidden id="fval4" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_4__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp4" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(4); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                                <apex:outputPanel style="display:none" id="flcam4" layout="inline">
                                                    <apex:inputHidden id="fdisp4_lkid"/>
                                                    <apex:inputHidden id="fdisp4_lkold"/>
                                                    <a title="Lookup (New Window)" href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:fdisp4&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:fdisp4').value), 600); setLastMousePosition(event); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and4" class="textBox">AND</span></td>
                                        </tr>
                                        <tr id="frow5">
                                            <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f5" class="textBox">5.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(5)" value="{!FilterObject5}" id="fobj5">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol5" styleclass="filterfield" onchange="updateOperator(5);resetValue(5)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_5__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions5}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop5" title="Operator 5" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_5__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp5" value="{!FilterData5}" onchange="filterDataChanged(5)"/>
                                                <apex:inputHidden id="fval5" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_5__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp5" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(5); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                                <apex:outputPanel style="display:none" id="flcam5" layout="inline">
                                                    <apex:inputHidden id="fdisp5_lkid"/>
                                                    <apex:inputHidden id="fdisp5_lkold"/>
                                                    <a title="Lookup (New Window)" href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:fdisp5&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:fdisp5').value), 600); setLastMousePosition(event); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="" id="and5" class="textBox">&nbsp;</span></td>
                                        </tr>
                                        <tr id="frow6" style="display:{!IF(FilterCount < 6,"none","")}">
                                            <td><span id="f6" class="textBox">6.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(6)" value="{!FilterObject6}" id="fobj6">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol6" styleclass="filterfield" onchange="updateOperator(6);resetValue(6)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_6__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions6}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop6" title="Operator 6" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_6__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp6" value="{!FilterData6}" onchange="filterDataChanged(6)"/>
                                                <apex:inputHidden id="fval6" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_6__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp6" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(6); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="" id="and6" class="textBox">&nbsp;</span></td>
                                        </tr>
                                        <tr id="frow7" style="display:{!IF(FilterCount < 7,"none","")}">
                                            <td><span id="f7" class="textBox">7.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(7)" value="{!FilterObject7}" id="fobj7">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol7" styleclass="filterfield" onchange="updateOperator(7);resetValue(7)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_7__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions7}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop7" title="Operator 7" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_7__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp7" value="{!FilterData7}" onchange="filterDataChanged(7)"/>
                                                <apex:inputHidden id="fval7" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_7__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp7" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(7); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="" id="and7" class="textBox">&nbsp;</span></td>
                                        </tr>
                                        <tr id="frow8" style="display:{!IF(FilterCount < 8,"none","")}">
                                            <td><span id="f8" class="textBox">8.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(8)" value="{!FilterObject8}" id="fobj8">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol8" styleclass="filterfield" onchange="updateOperator(8);resetValue(8)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_8__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions8}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop8" title="Operator 8" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_8__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp8" value="{!FilterData8}" onchange="filterDataChanged(8)"/>
                                                <apex:inputHidden id="fval8" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_8__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp8" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(8); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="" id="and8" class="textBox">&nbsp;</span></td>
                                        </tr>
                                        <tr id="frow9" style="display:{!IF(FilterCount < 9,"none","")}">
                                            <td><span id="f9" class="textBox">9.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(9)" value="{!FilterObject9}" id="fobj9">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol9" styleclass="filterfield" onchange="updateOperator(9);resetValue(9)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_9__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions9}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop9" title="Operator 9" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_9__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp9" value="{!FilterData9}" onchange="filterDataChanged(9)"/>
                                                <apex:inputHidden id="fval9" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_9__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp9" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(9); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="" id="and9" class="textBox">&nbsp;</span></td>
                                        </tr>
                                        <tr id="frow10" style="display:{!IF(FilterCount < 10,"none","")}">
                                            <td><span id="f10" class="textBox">10.</span></td>
                                            <td>
                                                <apex:selectList size="1" onchange="setFilterObjectType(10)" value="{!FilterObject10}" id="fobj10">
                                                    <apex:selectOptions value="{!FilterObjectOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fcol10" styleclass="filterfield" onchange="updateOperator(10);resetValue(10)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_10__c}">
                                                    <apex:selectOptions value="{!ObjectFieldOptions10}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:selectList size="1" id="fop10" title="Operator 10" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_10__c}">
                                                    <apex:selectOptions value="{!FilterOptions}"/>
                                                </apex:selectList>
                                            </td>
                                            <td>
                                                <apex:input id="fdisp10" value="{!FilterData10}" onchange="filterDataChanged(10)"/>
                                                <apex:inputHidden id="fval10" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_10__c}"/>
                                            </td>
                                            <td>
                                                <apex:outputPanel style="display:none" id="flkp10" layout="inline">
                                                    <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(10); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                                </apex:outputPanel>
                                            </td>
                                            <td><span style="" id="and10" class="textBox">&nbsp;</span></td>
                                        </tr>
                                    </tbody></table></td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                                            <span style="display:{!IF(ShowAdvancedOptions,"","none")};" id="frowButtons" class="addRemoveControl">
                                                <a id="fAddRowLink" href="#" onclick="addRow(); return false;" style="">Add Row</a>
                                                <span id="fAddRowLinkGreyed" class="greyedLink" style="display: none;">Add Row</span>&nbsp;
                                                <a id="fRemoveRowLink" href="#" onclick="removeRow(); return false;" style="display: none;">Remove Row</a>
                                                <span id="fRemoveRowLinkGreyed" class="greyedLink" style="">Remove Row</span>
                                            </span>
                                        </apex:outputPanel>
                                        <div class="addRemoveControl booleanFilterTopMargin">
                                            <a id="bool_filter_toggle" href="#" onclick="toggleBooleanFilter(); return false;">{!IF(ShowAdvancedOptions,"Clear Advanced Options","Advanced Options...")}</a><br />
                                            <span style="display: none;" id="bool_filter_span">
                                                <label for="bool_filter">Advanced Filter Conditions:</label><br />
                                                <apex:inputField id="bool_filter" value="{!qbdialer__DialerQuery__c.qbdialer__AdvancedFilter__c}" style="width:600px"/>
                                                <a title="Tips (New Window)" class="tipsLink" href="#" onclick="openPopupFocusEscapePounds(%27/help/doc/user_ed.jsp?loc=help%26target=working_with_advanced_filter_conditions_in_reports_and_list_views.htm%26section=Reports%27, %27Help%27, 700, 600, %27width=700,height=600,resizable=yes,toolbar=yes,status=no,scrollbars=yes,menubar=yes,directories=no,location=no,dependant=no%27, false, false); return false;"><span class="helpLink">Tips</span><img title="Help" class="helpIcon" alt="Help" src="/s.gif"/></a><br />
                                                <apex:outputPanel id="bool_filter_error" style="display:none;"><div class="errorMsg"><strong>Error:</strong> <span id="bool_filter_error_text">{!SaveError}</span></div></apex:outputPanel>
                                                <apex:outputPanel rendered="{!NOT(IsSimpleSeek)}">
                                                <img height="211" width="533" title="Boolean Filters Help" alt="Boolean Filters Help" src="/img/report_boolean_filter.gif"/><br />
                                                </apex:outputPanel>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="sort_criteria_panel">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Record Sort</h3></div>
                        <div class="pbSubbody">
                            <p id="neuralytics_sort_message" style="display:none">
                                Sorting criteria has been disabled because Neural Sorting has been enabled.
                                See your settings to adjust this feature.
                            </p>
                            <table><tbody>
                                <tr>
                                    <th scope="col">&nbsp;</th>
                                    <th scope="col">Field</th>
                                    <th scope="col">Direction</th>
                                </tr>
                                <tr id="srow1">
                                    <td>1.</td>
                                    <td>
                                        <apex:selectList size="1" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Field_1__c}" id="scol1">
                                            <apex:selectOptions value="{!ObjectFieldOptions}"/>
                                        </apex:selectList>
                                    </td>
                                    <td>
                                        <apex:selectList size="1" id="sort1" title="Sort Direction 1" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Direction_1__c}">
                                            <apex:selectOption itemLabel="--None--" itemValue=""/>
                                            <apex:selectOption itemLabel="ASC" itemValue="ASC"/>
                                            <apex:selectOption itemLabel="DESC" itemValue="DESC"/>
                                        </apex:selectList>
                                    </td>
                                    <td>AND</td>
                                </tr>
                                <tr id="srow2">
                                    <td>2.</td>
                                    <td>
                                        <apex:selectList size="1" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Field_2__c}" id="scol2">
                                            <apex:selectOptions value="{!ObjectFieldOptions}"/>
                                        </apex:selectList>
                                    </td>
                                    <td>
                                        <apex:selectList size="1" id="sort2" title="Sort Direction 2" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Direction_2__c}">
                                            <apex:selectOption itemLabel="--None--" itemValue=""/>
                                            <apex:selectOption itemLabel="ASC" itemValue="ASC"/>
                                            <apex:selectOption itemLabel="DESC" itemValue="DESC"/>
                                        </apex:selectList>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="assign_users_panel" rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Assign Users</h3></div>
                        <div class="pbSubbody">
                            <table><tbody>
                                <tr>
                                    <td class="labelCol requiredInput"><label for="fshare">Grant List Access:</label></td>
                                    <td>
                                        <div class="requiredInput">
                                        <div class="requiredBlock"></div>
                                            <apex:selectList id="fshare" size="1" value="{!qbdialer__DialerQuery__c.qbdialer__Attendees__c}" onchange="userSelectOptionOnclick(this.value);">
                                                <apex:selectOption id="fsharefsharenone" itemValue="fsharenone"   itemLabel="Visible only to me"/>
                                                <apex:selectOption id="fsharefshareall" itemValue="fshareall"    itemLabel="Visible to all users"/>
                                                <apex:selectOption id="fsharefsharegroups" itemValue="fsharegroups" itemLabel="Visible to certain groups of users"/>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="labelCol">&nbsp;</td>
                                    <td class="dataCol">
                                        <div style="display: block" id="duel" class="duelingListBox">
                                            <div style="display: none" id="editPage_duel_errorMsg" class="errorMsg">&nbsp;</div>
                                            <div>
                                                <label for="sharing_search">Search:</label>&nbsp;
                                                <select id="sharing_search" title="Group Type" onchange="userCategoryDropdownOnclick();" name="sharing_search">
                                                    <option selected="selected" value="A">Roles</option>
                                                    <option value="D">Roles and Subordinates</option>
                                                    <option value="U">Specific Users</option>
                                                </select>
                                                &nbsp;&nbsp;
                                                <label for="searchValue_sharing_search">for:</label>&nbsp;
                                                <input onkeydown="return duel_select_0Var.handleKeyDown(event);" onpropertychange="duel_select_0Var.handlePropertyChange();" id="searchValue_sharing_search" maxLength="80" name="searchValue_sharing_search"/>
                                                &nbsp;
                                                <input id="go_duel_select_0Var" class="btn" title="Find" onclick="ajaxSearch();" value=" Find " type="button" name="go_duel_select_0"/>
                                                <input id="clearSearchButton" class="btn" title="Clear Search" onclick="clearSearch();" value=" Clear Search " type="button" name="clearSearchButton"/>
                                                <br />
                                                <div style="visibility: hidden" id="error_QueryBuilder:editPage:duel_select_0" class="errorMsg"></div>
                                            </div>
                                            <table class="layout"><tbody>
                                                <tr>
                                                    <td class="selectCell">
                                                        <div class="selectTitle"><label for="duel_select_0">Available</label></div>
                                                        <select id="QueryBuilder:editPage:duel_select_0" size="14" multiple="true">
                                                            <option value="">--None--</option>
                                                        </select>
                                                    </td>
                                                    <td class="buttonCell">
                                                        <div class="text">Add</div>
                                                        <script type="text/javascript">
                                                            function moveRight(){
                                                                var src_dd = document.getElementById('QueryBuilder:editPage:duel_select_1');
                                                                var dst_dd = document.getElementById('QueryBuilder:editPage:duel_select_0');
                                                                if (!src_dd.disabled && !dst_dd.disabled) {
                                                                    duel_select_0Var.beforeMoveRight();
                                                                    window.editPage_DLBEInstance.instMoveOption(dst_dd, src_dd,'--None--', [], null,'--None--',false,null,'editPage_duel_errorMsg');
                                                                }
                                                            }

                                                            function moveLeft() {
                                                                var src_dd = document.getElementById('QueryBuilder:editPage:duel_select_0');
                                                                var dst_dd = document.getElementById('QueryBuilder:editPage:duel_select_1');
                                                                if (!src_dd.disabled && !dst_dd.disabled) {
                                                                    window.editPage_DLBEInstance.instMoveOption(dst_dd, src_dd,'--None--', [], null,'--None--',false,null,'editPage_duel_errorMsg');duel_select_0Var.moveLeft();
                                                                }
                                                            }
                                                        </script>
                                                        <div class="text"><a id="duel_select_0_right" href="#" onclick="moveRight(); return false;"><img class="rightArrowIcon" title="Add" alt="Add" src="/s.gif"/></a></div>
                                                        <div class="text"><a id="duel_select_0_left" href="#" onclick="moveLeft(); return false;"><img class="leftArrowIcon" title="Remove" alt="Remove" src="/s.gif"/></a></div>
                                                        <div class="duelingText">Remove</div>
                                                    </td>
                                                    <td class="selectCell">
                                                        <div class="selectTitle"><label for="duel_select_1">Selected</label></div>
                                                        <select id="QueryBuilder:editPage:duel_select_1" size="14" multiple="true">
                                                            <option value="">--None--</option>
                                                        </select>
                                                    </td>
                                                </tr>
                                            </tbody></table>
                                            <!-- false at the end of the SelectFilterElement turns off javascript searching. This stops the search box from clearing every time. We use a custom search function regardless.-->
                                            <script type="text/javascript">
                                                var duel_select_0Var = new SelectFilterElement('sharing_search', 'R', 'QueryBuilder:editPage:duel_select_0', '', 'QueryBuilder:editPage:duel_select_1', 100, false);
                                                var existingSelduel_select_1 = document.getElementById('QueryBuilder:editPage:duel_select_1');
                                                var existingSelduel_select_0 = document.getElementById('QueryBuilder:editPage:duel_select_0');
                                                window.editPage_DLBEInstance=new DuelingListBoxesElement(['QueryBuilder:editPage:duel_select_0','QueryBuilder:editPage:duel_select_1'],'editPage_duel_errorMsg');
                                                document.getElementById('duel').style.display = 'none';
                                            </script>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <div id="responseErrors" style="visibility: visible; color: #cc0000"></div>
                <apex:outputPanel id="callback_panel" rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Callbacks</h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="50%"><tbody>
                                <tr><td nowrap="nowrap">
                                    <strong>Receiving Callbacks:</strong><br />
                                    <apex:inputCheckbox value="{!qbdialer__DialerQuery__c.qbdialer__Prevent_callbacks__c}" id="prevent_callbacks" />
                                    <label for="QueryBuilder:editPage:prevent_callbacks">Prevent users from receiving callbacks while dialing in this list</label>
                                    <br />
                                    <br />
                                </td></tr>
                                <tr><td nowrap="nowrap">
                                    <strong>Who can call back:</strong><br />
                                    <apex:selectRadio id="call_backs" layout="pageDirection" value="{!qbdialer__DialerQuery__c.qbdialer__Callback_action__c}" onclick="showCallBackGracePeriod();">
                                        <apex:selectOption id="cb_owner" itemValue="owner" itemLabel="Only the owner of the callback"/>
                                        <apex:selectOption id="cb_list" itemValue="list" itemLabel="All attendees of this list"/>
                                        <apex:selectOption id="cb_all" itemValue="all" itemLabel="All users"/>
                                    </apex:selectRadio>
                                </td></tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <br />
                <div class="pbBottomButtons">
                    <table><tbody>
                        <tr><td class="pbTitle" align="center"><div id="savestatus_mirror"></div></td></tr>
                        <tr>
                            <td class="pbButtonb" align="center">
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                    <apex:commandButton value=" Save " id="save2"        onclick="return saveClick(true);" title=" Save "/>
                                    <apex:commandButton value=" Quick Save " id="savequick2"  onclick="return saveClickQuick(true);"  title=" Quick Save " rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" View Query Results " id="saveview2" onclick="return saveClickView();" title=" View Query Results " rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" Cancel "      action="{!DialerQueryCancel}"                                     title=" Cancel "     immediate="true"/>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IsSeekQuery}">
                                    <apex:commandButton value=" Save & Close " id="save_s2"       onclick="return saveClick(false);"                title=" Save & Close "       rerender="pageMsgs"/>
                                    <apex:commandButton value=" Quick Save " id="savequick_s2"         onclick="return saveClickQuick(false);"                 title=" Quick Save "         rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" View Query Results " id="saveview_s2" onclick="return saveClickView();" title=" View Query Results " rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" Cancel "             onclick="top.window.close();return false;"                       title=" Cancel "/>
                                </apex:outputPanel>
                            </td>
                        </tr>
                    </tbody></table>
                </div>
            </apex:outputPanel>
        </apex:form>
        <apex:form >
            <apex:actionFunction id="updatePicklistOptions" name="updatePicklistOptions" action="{!updateSelectedField}" rerender="picklist_options" oncomplete="showPickListOptions()">
                <apex:param name="selected_field" assignTo="{!selected_field}" value=""/>
                <apex:param name="campaign_id" assignTo="{!campaign_id}" value=""/>
            </apex:actionFunction>
        </apex:form>
        <div class="pbFooter secondaryPalette"><div class="bg">&nbsp;</div></div>
        <script type="text/javascript">
            function showCallBackGracePeriod() {}
            updateDataSourceDisplay('{!JSENCODE(DialerQuery__c.DataSource__c)}');
            setTimeout(postRowProcess, 1000);
        </script>
    </div>
</div>
    {!IS_Log}
</apex:page>