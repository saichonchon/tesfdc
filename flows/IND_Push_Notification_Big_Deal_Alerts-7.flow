<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <processMetadataValues>
            <name>textJson</name>
            <value>
                <stringValue>{&quot;mentions&quot;:[],&quot;message&quot;:&quot;Opportunity &gt;$10MM created !\n\nBIG DEAL ALERT !\n\nName: {![Opportunity].Name}\nOwner: {![Opportunity].Owner.FirstName}   {![Opportunity].Owner.LastName}\nAccount: {![Opportunity].Account.Name}\nAmount: {![Opportunity].Total_Opportunity_Value_USD__c}  USD\n\n&quot;}</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_1_A1</name>
        <label>Post to record</label>
        <locationX>100</locationX>
        <locationY>200</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>myWait_myRule_1</targetReference>
        </connector>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Opportunity &gt;$10MM created !

BIG DEAL ALERT !

Name: {!myVariable_current.Name}
Owner: {!myVariable_current.Owner.FirstName}   {!myVariable_current.Owner.LastName}
Account: {!myVariable_current.Account.Name}
Amount: {!myVariable_current.Total_Opportunity_Value_USD__c}  USD

</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>textJson</name>
            <value>
                <stringValue>{&quot;mentions&quot;:[],&quot;message&quot;:&quot;Opportunity &gt;$10MM is WON !\n\nBIG DEAL ALERT !\n\nName: {![Opportunity].Name}\nOwner: {![Opportunity].Owner.FirstName}   {![Opportunity].Owner.LastName}\nAccount: {![Opportunity].Account.Name}\nAmount: {![Opportunity].Total_Opportunity_Value_USD__c}  USD&quot;}</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_3_A1</name>
        <label>Post to record</label>
        <locationX>300</locationX>
        <locationY>200</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>myWait_myRule_3</targetReference>
        </connector>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Opportunity &gt;$10MM is WON !

BIG DEAL ALERT !

Name: {!myVariable_current.Name}
Owner: {!myVariable_current.Owner.FirstName}   {!myVariable_current.Owner.LastName}
Account: {!myVariable_current.Account.Name}
Amount: {!myVariable_current.Total_Opportunity_Value_USD__c}  USD</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>postTarget</name>
            <value>
                <stringValue>Industrial Executive Team</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>textJson</name>
            <value>
                <stringValue>{&quot;mentions&quot;:[],&quot;message&quot;:&quot;Opportunity &gt;$10MM created !\n\nBIG DEAL ALERT !\n\nName: {![Opportunity].Name}\nOwner: {![Opportunity].Owner.FirstName}   {![Opportunity].Owner.LastName}\nAccount: {![Opportunity].Account.Name}\nAmount: {![Opportunity].Total_Opportunity_Value_USD__c}  USD\n\nLink to the opportunity: https://c2s.my.salesforce.com/{![Opportunity].Id}&quot;}</stringValue>
            </value>
        </processMetadataValues>
        <name>myWaitEvent_myWait_myRule_1_event_0_SA1</name>
        <label>Post to group</label>
        <locationX>100</locationX>
        <locationY>200</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>myWaitEvent_myWait_myRule_1_event_0_postWaitExecutionAssignment</targetReference>
        </connector>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Opportunity &gt;$10MM created !

BIG DEAL ALERT !

Name: {!myVariable_current.Name}
Owner: {!myVariable_current.Owner.FirstName}   {!myVariable_current.Owner.LastName}
Account: {!myVariable_current.Account.Name}
Amount: {!myVariable_current.Total_Opportunity_Value_USD__c}  USD

Link to the opportunity: https://c2s.my.salesforce.com/{!myVariable_current.Id}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
            <value>
                <stringValue>GROUP</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <stringValue>0F9E00000005PRsKAM</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>postTarget</name>
            <value>
                <stringValue>Industrial Executive Team</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>textJson</name>
            <value>
                <stringValue>{&quot;mentions&quot;:[],&quot;message&quot;:&quot;Opportunity &gt;$10MM is WON !\n\nBIG DEAL ALERT !\n\nName: {![Opportunity].Name}\nOwner: {![Opportunity].Owner.FirstName}   {![Opportunity].Owner.LastName}\nAccount: {![Opportunity].Account.Name}\nAmount: {![Opportunity].Total_Opportunity_Value_USD__c}  USD\n\nLink to the opportunity: https://c2s.my.salesforce.com/{![Opportunity].Id}&quot;}</stringValue>
            </value>
        </processMetadataValues>
        <name>myWaitEvent_myWait_myRule_3_event_0_SA1</name>
        <label>Post to group</label>
        <locationX>300</locationX>
        <locationY>200</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>myWaitEvent_myWait_myRule_3_event_0_postWaitExecutionAssignment</targetReference>
        </connector>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Opportunity &gt;$10MM is WON !

BIG DEAL ALERT !

Name: {!myVariable_current.Name}
Owner: {!myVariable_current.Owner.FirstName}   {!myVariable_current.Owner.LastName}
Account: {!myVariable_current.Account.Name}
Amount: {!myVariable_current.Total_Opportunity_Value_USD__c}  USD

Link to the opportunity: https://c2s.my.salesforce.com/{!myVariable_current.Id}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
            <value>
                <stringValue>GROUP</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <stringValue>0F9E00000005PRsKAM</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <assignments>
        <name>myVariable_waitStartTimeAssignment</name>
        <label>myVariable_waitStartTimeAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myVariable_waitStartTimeVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myPreWaitDecision_myWait_myRule_3</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitAssignment_myWait_myRule_1</name>
        <label>myWaitAssignment_myWait_myRule_1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>cancelWaits</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>myWait_myRule_1</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitAssignment_myWait_myRule_3</name>
        <label>myWaitAssignment_myWait_myRule_3</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>cancelWaits</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>myWait_myRule_3</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myPreWaitDecision_myWait_myRule_1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitEvent_myWait_myRule_1_event_0_postWaitExecutionAssignment</name>
        <label>myWaitEvent_myWait_myRule_1_event_0_postWaitExecutionAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myWaitEvent_myWait_myRule_1_event_0_postActionExecutionVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myWait_myRule_1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitEvent_myWait_myRule_3_event_0_postWaitExecutionAssignment</name>
        <label>myWaitEvent_myWait_myRule_3_event_0_postWaitExecutionAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myWaitEvent_myWait_myRule_3_event_0_postActionExecutionVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myWait_myRule_3</targetReference>
        </connector>
    </assignments>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision</name>
        <label>myDecision</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_1</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_1_pmetdec</targetReference>
            </connector>
            <label>Check value on creation all opps</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision2</name>
        <label>myDecision2</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_3</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_3_pmetdec</targetReference>
            </connector>
            <label>Check value on won all opps</label>
        </rules>
    </decisions>
    <decisions>
        <name>myPreWaitDecision_myWait_myRule_1</name>
        <label>myPreWaitDecision_myWait_myRule_1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myWaitAssignment_myWait_myRule_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myPreWaitRule_myWait_myRule_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_1</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myDecision</targetReference>
            </connector>
            <label>myPreWaitRule_myWait_myRule_1</label>
        </rules>
    </decisions>
    <decisions>
        <name>myPreWaitDecision_myWait_myRule_3</name>
        <label>myPreWaitDecision_myWait_myRule_3</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myWaitAssignment_myWait_myRule_3</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myPreWaitRule_myWait_myRule_3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_3</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myPreWaitDecision_myWait_myRule_1</targetReference>
            </connector>
            <label>myPreWaitRule_myWait_myRule_3</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_1_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>100</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myRule_1_A1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_1_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_1_A1</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_1_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_1_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_3_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>300</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myRule_3_A1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_3_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_3_A1</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_3_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_3_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <description>Used to send push notifications to IND Executive Management Chatter Group. Version with delayed group post.</description>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(

OR(
[Opportunity].RecordType.DeveloperName = &apos;IND_Sales_Project&apos;,
[Opportunity].RecordType.DeveloperName = &apos;IND_Engineering_project&apos;
),
[Opportunity].Total_Opportunity_Value_USD__c &gt;10000000,
OR(
ISPICKVAL([Opportunity].StageName, &apos;Exploring Needs&apos;),
ISPICKVAL([Opportunity].StageName, &apos;Developing &amp; Differentiating&apos;)
),

NOT(
AND(
ISCHANGED([Opportunity].StageName),
OR(
PRIORVALUE([Opportunity].StageName)=&apos;Exploring Needs&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Developing &amp; Differentiating&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Contracting&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Won&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Production&apos;
)
)
)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_1</name>
        <dataType>Boolean</dataType>
        <expression>AND(

OR(
{!myVariable_current.RecordType.DeveloperName} = &apos;IND_Sales_Project&apos;,
{!myVariable_current.RecordType.DeveloperName} = &apos;IND_Engineering_project&apos;
),
{!myVariable_current.Total_Opportunity_Value_USD__c} &gt;10000000,
OR(
ISPICKVAL({!myVariable_current.StageName}, &apos;Exploring Needs&apos;),
ISPICKVAL({!myVariable_current.StageName}, &apos;Developing &amp; Differentiating&apos;)
),

NOT(
AND(
ISCHANGED({!myVariable_current.StageName}),
OR(
PRIORVALUE({!myVariable_current.StageName})=&apos;Exploring Needs&apos;,
PRIORVALUE({!myVariable_current.StageName})=&apos;Developing &amp; Differentiating&apos;,
PRIORVALUE({!myVariable_current.StageName})=&apos;Contracting&apos;,
PRIORVALUE({!myVariable_current.StageName})=&apos;Won&apos;,
PRIORVALUE({!myVariable_current.StageName})=&apos;Production&apos;
)
)
)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(

OR(
[Opportunity].RecordType.DeveloperName = &apos;IND_Sales_Project&apos;,
[Opportunity].RecordType.DeveloperName = &apos;IND_Engineering_project&apos;
),
[Opportunity].Total_Opportunity_Value_USD__c &gt;10000000,
OR(
ISPICKVAL([Opportunity].StageName, &apos;Exploring Needs&apos;),
ISPICKVAL([Opportunity].StageName, &apos;Developing &amp; Differentiating&apos;)
),

NOT(
AND(
ISCHANGED([Opportunity].StageName),
OR(
PRIORVALUE([Opportunity].StageName)=&apos;Exploring Needs&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Developing &amp; Differentiating&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Contracting&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Won&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Production&apos;
)
)
)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_1_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(

OR(
{!myVariable_old.RecordType.DeveloperName} = &apos;IND_Sales_Project&apos;,
{!myVariable_old.RecordType.DeveloperName} = &apos;IND_Engineering_project&apos;
),
{!myVariable_old.Total_Opportunity_Value_USD__c} &gt;10000000,
OR(
ISPICKVAL({!myVariable_old.StageName}, &apos;Exploring Needs&apos;),
ISPICKVAL({!myVariable_old.StageName}, &apos;Developing &amp; Differentiating&apos;)
),

NOT(
AND(
ISCHANGED({!myVariable_old.StageName}),
OR(
PRIORVALUE({!myVariable_old.StageName})=&apos;Exploring Needs&apos;,
PRIORVALUE({!myVariable_old.StageName})=&apos;Developing &amp; Differentiating&apos;,
PRIORVALUE({!myVariable_old.StageName})=&apos;Contracting&apos;,
PRIORVALUE({!myVariable_old.StageName})=&apos;Won&apos;,
PRIORVALUE({!myVariable_old.StageName})=&apos;Production&apos;
)
)
)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(

OR(
[Opportunity].RecordType.DeveloperName = &apos;IND_Sales_Project&apos;,
[Opportunity].RecordType.DeveloperName = &apos;IND_Engineering_project&apos;
),
[Opportunity].Total_Opportunity_Value_USD__c &gt;10000000,
ISCHANGED([Opportunity].StageName),

OR(
ISPICKVAL([Opportunity].StageName, &apos;Won&apos;),
ISPICKVAL([Opportunity].StageName, &apos;Production&apos;)
),


NOT(
OR(
PRIORVALUE([Opportunity].StageName)=&apos;Won&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Production&apos;
)
)



)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_3</name>
        <dataType>Boolean</dataType>
        <expression>AND(

OR(
{!myVariable_current.RecordType.DeveloperName} = &apos;IND_Sales_Project&apos;,
{!myVariable_current.RecordType.DeveloperName} = &apos;IND_Engineering_project&apos;
),
{!myVariable_current.Total_Opportunity_Value_USD__c} &gt;10000000,
ISCHANGED({!myVariable_current.StageName}),

OR(
ISPICKVAL({!myVariable_current.StageName}, &apos;Won&apos;),
ISPICKVAL({!myVariable_current.StageName}, &apos;Production&apos;)
),


NOT(
OR(
PRIORVALUE({!myVariable_current.StageName})=&apos;Won&apos;,
PRIORVALUE({!myVariable_current.StageName})=&apos;Production&apos;
)
)



)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(

OR(
[Opportunity].RecordType.DeveloperName = &apos;IND_Sales_Project&apos;,
[Opportunity].RecordType.DeveloperName = &apos;IND_Engineering_project&apos;
),
[Opportunity].Total_Opportunity_Value_USD__c &gt;10000000,
ISCHANGED([Opportunity].StageName),

OR(
ISPICKVAL([Opportunity].StageName, &apos;Won&apos;),
ISPICKVAL([Opportunity].StageName, &apos;Production&apos;)
),


NOT(
OR(
PRIORVALUE([Opportunity].StageName)=&apos;Won&apos;,
PRIORVALUE([Opportunity].StageName)=&apos;Production&apos;
)
)



)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_3_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(

OR(
{!myVariable_old.RecordType.DeveloperName} = &apos;IND_Sales_Project&apos;,
{!myVariable_old.RecordType.DeveloperName} = &apos;IND_Engineering_project&apos;
),
{!myVariable_old.Total_Opportunity_Value_USD__c} &gt;10000000,
ISCHANGED({!myVariable_old.StageName}),

OR(
ISPICKVAL({!myVariable_old.StageName}, &apos;Won&apos;),
ISPICKVAL({!myVariable_old.StageName}, &apos;Production&apos;)
),


NOT(
OR(
PRIORVALUE({!myVariable_old.StageName})=&apos;Won&apos;,
PRIORVALUE({!myVariable_old.StageName})=&apos;Production&apos;
)
)



)</expression>
    </formulas>
    <interviewLabel>IND_Push_Notification_Big_Deal_Alerts-7_Opportunity</interviewLabel>
    <label>IND Push Notification Big Deal Alerts Exec Group</label>
    <processMetadataValues>
        <name>ObjectType</name>
        <value>
            <stringValue>Opportunity</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>ObjectVariable</name>
        <value>
            <elementReference>myVariable_current</elementReference>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OldObjectVariable</name>
        <value>
            <elementReference>myVariable_old</elementReference>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>TriggerType</name>
        <value>
            <stringValue>onAllChanges</stringValue>
        </value>
    </processMetadataValues>
    <processType>Workflow</processType>
    <startElementReference>myVariable_waitStartTimeAssignment</startElementReference>
    <variables>
        <name>cancelWaits</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>myVariable_current</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>myVariable_old</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>myVariable_waitStartTimeVariable</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Flow.CurrentDateTime</elementReference>
        </value>
    </variables>
    <variables>
        <name>myWaitEvent_myWait_myRule_1_event_0_postActionExecutionVariable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>myWaitEvent_myWait_myRule_3_event_0_postActionExecutionVariable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <waits>
        <name>myWait_myRule_1</name>
        <label>myWait_myRule_1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>defaultLabel</defaultConnectorLabel>
        <waitEvents>
            <processMetadataValues>
                <name>inputParameterType</name>
                <value>
                    <stringValue>now</stringValue>
                </value>
            </processMetadataValues>
            <name>myWaitEvent_myWait_myRule_1_event_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>myWaitEvent_myWait_myRule_1_event_0_postActionExecutionVariable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWaitEvent_myWait_myRule_1_event_0_SA1</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>myVariable_waitStartTimeVariable</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Days</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <label>myWaitEvent_myWait_myRule_1_event_0</label>
        </waitEvents>
    </waits>
    <waits>
        <name>myWait_myRule_3</name>
        <label>myWait_myRule_3</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>defaultLabel</defaultConnectorLabel>
        <waitEvents>
            <processMetadataValues>
                <name>inputParameterType</name>
                <value>
                    <stringValue>now</stringValue>
                </value>
            </processMetadataValues>
            <name>myWaitEvent_myWait_myRule_3_event_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>myWaitEvent_myWait_myRule_3_event_0_postActionExecutionVariable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWaitEvent_myWait_myRule_3_event_0_SA1</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>myVariable_waitStartTimeVariable</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Days</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <label>myWaitEvent_myWait_myRule_3_event_0</label>
        </waitEvents>
    </waits>
</Flow>
